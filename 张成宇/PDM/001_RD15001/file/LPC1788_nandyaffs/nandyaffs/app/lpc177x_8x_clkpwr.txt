; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\lpc177x_8x_clkpwr.o --asm_dir=.\ --list_dir=.\ --depend=.\flash\lpc177x_8x_clkpwr.d --feedback=.\Flash\YL_LPC1788_Test.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\CM3_lib -I..\Drivers -I..\Startup -I.\Easy_web -I.\Lcd_Drv -I.\IIC_Test -I.\USU_Host -I.\Nand_Test -I.\FATFS_R0.08 -I..\fs -I"D:\Program Files\mdk\ARM\RV31\INC" -I"D:\Program Files\mdk\pack\ARM\CMSIS\4.1.1\CMSIS\Include" -I"D:\Program Files\mdk\ARM\Inc\NXP\LPC177x_8x" -D__MICROLIB --omf_browse=.\flash\lpc177x_8x_clkpwr.crf ..\Drivers\lpc177x_8x_clkpwr.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  CLKPWR_SetCLKDiv PROC
;;;58      **********************************************************************/
;;;59     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
000000  b570              PUSH     {r4-r6,lr}
;;;60     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;61     	switch(ClkType)
000006  b135              CBZ      r5,|L1.22|
000008  2d01              CMP      r5,#1
00000a  d009              BEQ      |L1.32|
00000c  2d02              CMP      r5,#2
00000e  d00d              BEQ      |L1.44|
000010  2d03              CMP      r5,#3
000012  d120              BNE      |L1.86|
000014  e010              B        |L1.56|
                  |L1.22|
;;;62     	{
;;;63     	case CLKPWR_CLKTYPE_CPU:
;;;64     		LPC_SC->CCLKSEL = DivVal;
000016  4812              LDR      r0,|L1.96|
000018  6004              STR      r4,[r0,#0]
;;;65     		SystemCoreClockUpdate(); //Update clock
00001a  f7fffffe          BL       SystemCoreClockUpdate
;;;66     		break;
00001e  e01c              B        |L1.90|
                  |L1.32|
;;;67     	case CLKPWR_CLKTYPE_PER:
;;;68     		LPC_SC->PCLKSEL = DivVal;
000020  480f              LDR      r0,|L1.96|
000022  30a4              ADDS     r0,r0,#0xa4
000024  6004              STR      r4,[r0,#0]
;;;69     		SystemCoreClockUpdate(); //Update clock
000026  f7fffffe          BL       SystemCoreClockUpdate
;;;70     		break;
00002a  e016              B        |L1.90|
                  |L1.44|
;;;71     	case CLKPWR_CLKTYPE_EMC:
;;;72     		LPC_SC->EMCCLKSEL = DivVal;
00002c  480c              LDR      r0,|L1.96|
00002e  1f00              SUBS     r0,r0,#4
000030  6004              STR      r4,[r0,#0]
;;;73     		SystemCoreClockUpdate(); //Update clock
000032  f7fffffe          BL       SystemCoreClockUpdate
;;;74     		break;
000036  e010              B        |L1.90|
                  |L1.56|
;;;75     	case CLKPWR_CLKTYPE_USB:
;;;76     		LPC_SC->USBCLKSEL &= ~(0x0000001F);
000038  4809              LDR      r0,|L1.96|
00003a  1d00              ADDS     r0,r0,#4
00003c  6800              LDR      r0,[r0,#0]
00003e  f020001f          BIC      r0,r0,#0x1f
000042  4908              LDR      r1,|L1.100|
000044  f8c10108          STR      r0,[r1,#0x108]
;;;77     		LPC_SC->USBCLKSEL |= DivVal;
000048  4608              MOV      r0,r1
00004a  f8d00108          LDR      r0,[r0,#0x108]
00004e  4320              ORRS     r0,r0,r4
000050  f8c10108          STR      r0,[r1,#0x108]
;;;78     		break;
000054  e001              B        |L1.90|
                  |L1.86|
;;;79     	default:
;;;80     		while(1);//Error Loop;
000056  bf00              NOP      
                  |L1.88|
000058  e7fe              B        |L1.88|
                  |L1.90|
00005a  bf00              NOP                            ;66
;;;81     	}
;;;82     }
00005c  bd70              POP      {r4-r6,pc}
;;;83     
                          ENDP

00005e  0000              DCW      0x0000
                  |L1.96|
                          DCD      0x400fc104
                  |L1.100|
                          DCD      0x400fc000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  CLKPWR_GetCLK PROC
;;;58      **********************************************************************/
;;;59     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
000000  4601              MOV      r1,r0
;;;60     {
000002  2905              CMP      r1,#5
000004  d213              BCS      |L2.46|
;;;61     	switch(ClkType)
000006  e8dff001          TBB      [pc,r1]
00000a  0306              DCB      0x03,0x06
00000c  090c0f00          DCB      0x09,0x0c,0x0f,0x00
000010  4811              LDR      r0,|L2.88|
000012  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
                  |L2.20|
000014  4770              BX       lr
;;;62     	{
;;;63     	case CLKPWR_CLKTYPE_CPU:
;;;64     		LPC_SC->CCLKSEL = DivVal;
000016  4811              LDR      r0,|L2.92|
000018  6800              LDR      r0,[r0,#0]  ; PeripheralClock
;;;65     		SystemCoreClockUpdate(); //Update clock
00001a  e7fb              B        |L2.20|
00001c  4810              LDR      r0,|L2.96|
;;;66     		break;
00001e  6800              LDR      r0,[r0,#0]  ; EMCClock
;;;67     	case CLKPWR_CLKTYPE_PER:
;;;68     		LPC_SC->PCLKSEL = DivVal;
000020  e7f8              B        |L2.20|
000022  4810              LDR      r0,|L2.100|
000024  6800              LDR      r0,[r0,#0]  ; USBClock
;;;69     		SystemCoreClockUpdate(); //Update clock
000026  e7f5              B        |L2.20|
000028  480f              LDR      r0,|L2.104|
;;;70     		break;
00002a  6800              LDR      r0,[r0,#0]  ; SPIFIClock
;;;71     	case CLKPWR_CLKTYPE_EMC:
;;;72     		LPC_SC->EMCCLKSEL = DivVal;
00002c  e7f2              B        |L2.20|
                  |L2.46|
00002e  bf00              NOP      
                  |L2.48|
000030  e7fe              B        |L2.48|
;;;73     		SystemCoreClockUpdate(); //Update clock
;;;74     		break;
;;;75     	case CLKPWR_CLKTYPE_USB:
;;;76     		LPC_SC->USBCLKSEL &= ~(0x0000001F);
;;;77     		LPC_SC->USBCLKSEL |= DivVal;
;;;78     		break;
;;;79     	default:
;;;80     		while(1);//Error Loop;
;;;81     	}
;;;82     }
;;;83     
                          ENDP

                  CLKPWR_ConfigPPWR PROC
;;;58      **********************************************************************/
;;;59     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
;;;60     {
;;;61     	switch(ClkType)
;;;62     	{
;;;63     	case CLKPWR_CLKTYPE_CPU:
;;;64     		LPC_SC->CCLKSEL = DivVal;
;;;65     		SystemCoreClockUpdate(); //Update clock
;;;66     		break;
;;;67     	case CLKPWR_CLKTYPE_PER:
;;;68     		LPC_SC->PCLKSEL = DivVal;
;;;69     		SystemCoreClockUpdate(); //Update clock
;;;70     		break;
;;;71     	case CLKPWR_CLKTYPE_EMC:
;;;72     		LPC_SC->EMCCLKSEL = DivVal;
;;;73     		SystemCoreClockUpdate(); //Update clock
000032  2901              CMP      r1,#1
000034  d107              BNE      |L2.70|
;;;74     		break;
000036  4a0d              LDR      r2,|L2.108|
;;;75     	case CLKPWR_CLKTYPE_USB:
;;;76     		LPC_SC->USBCLKSEL &= ~(0x0000001F);
000038  6812              LDR      r2,[r2,#0]
00003a  4302              ORRS     r2,r2,r0
00003c  4b0b              LDR      r3,|L2.108|
00003e  3bc4              SUBS     r3,r3,#0xc4
000040  f8c320c4          STR      r2,[r3,#0xc4]
000044  e007              B        |L2.86|
                  |L2.70|
000046  b931              CBNZ     r1,|L2.86|
;;;77     		LPC_SC->USBCLKSEL |= DivVal;
000048  4a08              LDR      r2,|L2.108|
00004a  6812              LDR      r2,[r2,#0]
00004c  4382              BICS     r2,r2,r0
00004e  4b07              LDR      r3,|L2.108|
000050  3bc4              SUBS     r3,r3,#0xc4
000052  f8c320c4          STR      r2,[r3,#0xc4]
                  |L2.86|
;;;78     		break;
;;;79     	default:
;;;80     		while(1);//Error Loop;
000056  4770              BX       lr
;;;81     	}
;;;82     }
;;;83     
                          ENDP

                  |L2.88|
                          DCD      SystemCoreClock
                  |L2.92|
                          DCD      PeripheralClock
                  |L2.96|
                          DCD      EMCClock
                  |L2.100|
                          DCD      USBClock
                  |L2.104|
                          DCD      SPIFIClock
                  |L2.108|
                          DCD      0x400fc0c4

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  CLKPWR_Sleep PROC
;;;58      **********************************************************************/
;;;59     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
000000  2000              MOVS     r0,#0
;;;60     {
000002  4902              LDR      r1,|L3.12|
000004  6008              STR      r0,[r1,#0]
;;;61     	switch(ClkType)
000006  bf30              WFI      
000008  4770              BX       lr
;;;62     	{
;;;63     	case CLKPWR_CLKTYPE_CPU:
;;;64     		LPC_SC->CCLKSEL = DivVal;
;;;65     		SystemCoreClockUpdate(); //Update clock
;;;66     		break;
;;;67     	case CLKPWR_CLKTYPE_PER:
;;;68     		LPC_SC->PCLKSEL = DivVal;
;;;69     		SystemCoreClockUpdate(); //Update clock
;;;70     		break;
;;;71     	case CLKPWR_CLKTYPE_EMC:
;;;72     		LPC_SC->EMCCLKSEL = DivVal;
;;;73     		SystemCoreClockUpdate(); //Update clock
;;;74     		break;
;;;75     	case CLKPWR_CLKTYPE_USB:
;;;76     		LPC_SC->USBCLKSEL &= ~(0x0000001F);
;;;77     		LPC_SC->USBCLKSEL |= DivVal;
;;;78     		break;
;;;79     	default:
;;;80     		while(1);//Error Loop;
;;;81     	}
;;;82     }
;;;83     
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x400fc0c0

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  CLKPWR_DeepSleep PROC
;;;58      **********************************************************************/
;;;59     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
000000  2004              MOVS     r0,#4
;;;60     {
000002  4903              LDR      r1,|L4.16|
000004  6008              STR      r0,[r1,#0]
;;;61     	switch(ClkType)
000006  2008              MOVS     r0,#8
000008  4902              LDR      r1,|L4.20|
00000a  6008              STR      r0,[r1,#0]
00000c  bf30              WFI      
00000e  4770              BX       lr
;;;62     	{
;;;63     	case CLKPWR_CLKTYPE_CPU:
;;;64     		LPC_SC->CCLKSEL = DivVal;
;;;65     		SystemCoreClockUpdate(); //Update clock
;;;66     		break;
;;;67     	case CLKPWR_CLKTYPE_PER:
;;;68     		LPC_SC->PCLKSEL = DivVal;
;;;69     		SystemCoreClockUpdate(); //Update clock
;;;70     		break;
;;;71     	case CLKPWR_CLKTYPE_EMC:
;;;72     		LPC_SC->EMCCLKSEL = DivVal;
;;;73     		SystemCoreClockUpdate(); //Update clock
;;;74     		break;
;;;75     	case CLKPWR_CLKTYPE_USB:
;;;76     		LPC_SC->USBCLKSEL &= ~(0x0000001F);
;;;77     		LPC_SC->USBCLKSEL |= DivVal;
;;;78     		break;
;;;79     	default:
;;;80     		while(1);//Error Loop;
;;;81     	}
;;;82     }
;;;83     
                          ENDP

                  |L4.16|
                          DCD      0xe000ed10
                  |L4.20|
                          DCD      0x400fc0c0

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  CLKPWR_PowerDown PROC
;;;58      **********************************************************************/
;;;59     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
000000  2004              MOVS     r0,#4
;;;60     {
000002  4903              LDR      r1,|L5.16|
000004  6008              STR      r0,[r1,#0]
;;;61     	switch(ClkType)
000006  2009              MOVS     r0,#9
000008  4902              LDR      r1,|L5.20|
00000a  6008              STR      r0,[r1,#0]
00000c  bf30              WFI      
00000e  4770              BX       lr
;;;62     	{
;;;63     	case CLKPWR_CLKTYPE_CPU:
;;;64     		LPC_SC->CCLKSEL = DivVal;
;;;65     		SystemCoreClockUpdate(); //Update clock
;;;66     		break;
;;;67     	case CLKPWR_CLKTYPE_PER:
;;;68     		LPC_SC->PCLKSEL = DivVal;
;;;69     		SystemCoreClockUpdate(); //Update clock
;;;70     		break;
;;;71     	case CLKPWR_CLKTYPE_EMC:
;;;72     		LPC_SC->EMCCLKSEL = DivVal;
;;;73     		SystemCoreClockUpdate(); //Update clock
;;;74     		break;
;;;75     	case CLKPWR_CLKTYPE_USB:
;;;76     		LPC_SC->USBCLKSEL &= ~(0x0000001F);
;;;77     		LPC_SC->USBCLKSEL |= DivVal;
;;;78     		break;
;;;79     	default:
;;;80     		while(1);//Error Loop;
;;;81     	}
;;;82     }
;;;83     
                          ENDP

                  |L5.16|
                          DCD      0xe000ed10
                  |L5.20|
                          DCD      0x400fc0c0

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  CLKPWR_DeepPowerDown PROC
;;;58      **********************************************************************/
;;;59     void CLKPWR_SetCLKDiv (uint8_t ClkType, uint8_t DivVal)
000000  2004              MOVS     r0,#4
;;;60     {
000002  4903              LDR      r1,|L6.16|
000004  6008              STR      r0,[r1,#0]
;;;61     	switch(ClkType)
000006  2003              MOVS     r0,#3
000008  4902              LDR      r1,|L6.20|
00000a  6008              STR      r0,[r1,#0]
00000c  bf30              WFI      
00000e  4770              BX       lr
;;;62     	{
;;;63     	case CLKPWR_CLKTYPE_CPU:
;;;64     		LPC_SC->CCLKSEL = DivVal;
;;;65     		SystemCoreClockUpdate(); //Update clock
;;;66     		break;
;;;67     	case CLKPWR_CLKTYPE_PER:
;;;68     		LPC_SC->PCLKSEL = DivVal;
;;;69     		SystemCoreClockUpdate(); //Update clock
;;;70     		break;
;;;71     	case CLKPWR_CLKTYPE_EMC:
;;;72     		LPC_SC->EMCCLKSEL = DivVal;
;;;73     		SystemCoreClockUpdate(); //Update clock
;;;74     		break;
;;;75     	case CLKPWR_CLKTYPE_USB:
;;;76     		LPC_SC->USBCLKSEL &= ~(0x0000001F);
;;;77     		LPC_SC->USBCLKSEL |= DivVal;
;;;78     		break;
;;;79     	default:
;;;80     		while(1);//Error Loop;
;;;81     	}
;;;82     }
;;;83     
                          ENDP

                  |L6.16|
                          DCD      0xe000ed10
                  |L6.20|
                          DCD      0x400fc0c0

                          AREA ||.data||, DATA, ALIGN=2

                  USBFrequency
                          DCD      0x00000000
                  SPIFIFrequency
                          DCD      0x00000000

; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\lpc177x_8x_emc.o --asm_dir=.\ --list_dir=.\ --depend=.\flash\lpc177x_8x_emc.d --feedback=.\Flash\YL_LPC1788_Test.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\CM3_lib -I..\Drivers -I..\Startup -I.\Easy_web -I.\Lcd_Drv -I.\IIC_Test -I.\USU_Host -I.\Nand_Test -I.\FATFS_R0.08 -I..\fs -I"D:\Program Files\mdk\ARM\RV31\INC" -I"D:\Program Files\mdk\pack\ARM\CMSIS\4.1.1\CMSIS\Include" -I"D:\Program Files\mdk\ARM\Inc\NXP\LPC177x_8x" -D__MICROLIB --omf_browse=.\flash\lpc177x_8x_emc.crf ..\Drivers\lpc177x_8x_emc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  EMC_Init PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  489f              LDR      r0,|L1.640|
000004  6800              LDR      r0,[r0,#0]
000006  f4406000          ORR      r0,r0,#0x800
00000a  499d              LDR      r1,|L1.640|
00000c  39c4              SUBS     r1,r1,#0xc4
00000e  f8c100c4          STR      r0,[r1,#0xc4]
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  f2410010          MOV      r0,#0x1010
000016  499b              LDR      r1,|L1.644|
000018  6008              STR      r0,[r1,#0]
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  2001              MOVS     r0,#1
00001c  499a              LDR      r1,|L1.648|
00001e  6008              STR      r0,[r1,#0]
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  2000              MOVS     r0,#0
000022  6088              STR      r0,[r1,#8]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000024  2201              MOVS     r2,#1
000026  2110              MOVS     r1,#0x10
000028  2002              MOVS     r0,#2
00002a  f7fffffe          BL       PINSEL_ConfigPin
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  2201              MOVS     r2,#1
000030  2111              MOVS     r1,#0x11
000032  2002              MOVS     r0,#2
000034  f7fffffe          BL       PINSEL_ConfigPin
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  2201              MOVS     r2,#1
00003a  2112              MOVS     r1,#0x12
00003c  2002              MOVS     r0,#2
00003e  f7fffffe          BL       PINSEL_ConfigPin
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  2201              MOVS     r2,#1
000044  2114              MOVS     r1,#0x14
000046  2002              MOVS     r0,#2
000048  f7fffffe          BL       PINSEL_ConfigPin
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  2201              MOVS     r2,#1
00004e  2118              MOVS     r1,#0x18
000050  2002              MOVS     r0,#2
000052  f7fffffe          BL       PINSEL_ConfigPin
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  2201              MOVS     r2,#1
000058  211c              MOVS     r1,#0x1c
00005a  2002              MOVS     r0,#2
00005c  f7fffffe          BL       PINSEL_ConfigPin
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  2201              MOVS     r2,#1
000062  211d              MOVS     r1,#0x1d
000064  2002              MOVS     r0,#2
000066  f7fffffe          BL       PINSEL_ConfigPin
;;;88     	PINSEL_ConfigPin(2,30,1);
00006a  2201              MOVS     r2,#1
00006c  211e              MOVS     r1,#0x1e
00006e  2002              MOVS     r0,#2
000070  f7fffffe          BL       PINSEL_ConfigPin
;;;89     	PINSEL_ConfigPin(2,31,1);
000074  2201              MOVS     r2,#1
000076  211f              MOVS     r1,#0x1f
000078  2002              MOVS     r0,#2
00007a  f7fffffe          BL       PINSEL_ConfigPin
;;;90     
;;;91     	for(i = 0; i < 32; i++)
00007e  2400              MOVS     r4,#0
000080  e00b              B        |L1.154|
                  |L1.130|
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
000082  2201              MOVS     r2,#1
000084  4621              MOV      r1,r4
000086  2003              MOVS     r0,#3
000088  f7fffffe          BL       PINSEL_ConfigPin
;;;94     		PINSEL_ConfigPin(4,i,1);
00008c  2201              MOVS     r2,#1
00008e  4621              MOV      r1,r4
000090  2004              MOVS     r0,#4
000092  f7fffffe          BL       PINSEL_ConfigPin
000096  1c60              ADDS     r0,r4,#1              ;91
000098  b2c4              UXTB     r4,r0                 ;91
                  |L1.154|
00009a  2c20              CMP      r4,#0x20              ;91
00009c  dbf1              BLT      |L1.130|
;;;95     	}
;;;96     }
00009e  bd10              POP      {r4,pc}
;;;97     /*********************************************************************//**
                          ENDP

                  EMC_StaMemConfigMW PROC
;;;439     **********************************************************************/
;;;440    void EMC_StaMemConfigMW(uint32_t index , uint32_t mem_width)
0000a0  b510              PUSH     {r4,lr}
;;;441    {
0000a2  4602              MOV      r2,r0
;;;442       uint32_t mask =  ~(uint32_t)(0x03)  ;
0000a4  f06f0003          MVN      r0,#3
;;;443       switch ( index)
0000a8  b132              CBZ      r2,|L1.184|
0000aa  2a01              CMP      r2,#1
0000ac  d00c              BEQ      |L1.200|
0000ae  2a02              CMP      r2,#2
0000b0  d013              BEQ      |L1.218|
0000b2  2a03              CMP      r2,#3
0000b4  d123              BNE      |L1.254|
0000b6  e019              B        |L1.236|
                  |L1.184|
;;;444       {
;;;445          case 0:
;;;446             LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0 & mask) | mem_width;
0000b8  4b74              LDR      r3,|L1.652|
0000ba  681b              LDR      r3,[r3,#0]
0000bc  4003              ANDS     r3,r3,r0
0000be  430b              ORRS     r3,r3,r1
0000c0  4c71              LDR      r4,|L1.648|
0000c2  f8c43200          STR      r3,[r4,#0x200]
;;;447    	   break;
0000c6  e01a              B        |L1.254|
                  |L1.200|
;;;448          case 1:
;;;449             LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1 & mask) | mem_width;
0000c8  4b70              LDR      r3,|L1.652|
0000ca  3320              ADDS     r3,r3,#0x20
0000cc  681b              LDR      r3,[r3,#0]
0000ce  4003              ANDS     r3,r3,r0
0000d0  430b              ORRS     r3,r3,r1
0000d2  4c6d              LDR      r4,|L1.648|
0000d4  f8c43220          STR      r3,[r4,#0x220]
;;;450    	   break;
0000d8  e011              B        |L1.254|
                  |L1.218|
;;;451          case 2:
;;;452             LPC_EMC->StaticConfig2 = (LPC_EMC->StaticConfig2 & mask)| mem_width;
0000da  4b6c              LDR      r3,|L1.652|
0000dc  3340              ADDS     r3,r3,#0x40
0000de  681b              LDR      r3,[r3,#0]
0000e0  4003              ANDS     r3,r3,r0
0000e2  430b              ORRS     r3,r3,r1
0000e4  4c68              LDR      r4,|L1.648|
0000e6  f8c43240          STR      r3,[r4,#0x240]
;;;453    	   break;
0000ea  e008              B        |L1.254|
                  |L1.236|
;;;454          case 3:
;;;455             LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3 & mask) | mem_width;
0000ec  4b67              LDR      r3,|L1.652|
0000ee  3360              ADDS     r3,r3,#0x60
0000f0  681b              LDR      r3,[r3,#0]
0000f2  4003              ANDS     r3,r3,r0
0000f4  430b              ORRS     r3,r3,r1
0000f6  4c64              LDR      r4,|L1.648|
0000f8  f8c43260          STR      r3,[r4,#0x260]
;;;456    	   break;
0000fc  bf00              NOP      
                  |L1.254|
0000fe  bf00              NOP                            ;447
;;;457       }
;;;458    }
000100  bd10              POP      {r4,pc}
;;;459    /*********************************************************************//**
                          ENDP

                  EMC_StaMemConfigPB PROC
;;;521     **********************************************************************/
;;;522    void EMC_StaMemConfigPB(uint32_t index , uint32_t pb_val)
000102  b510              PUSH     {r4,lr}
;;;523    {
000104  4602              MOV      r2,r0
;;;524       uint32_t mask =  ~(uint32_t)(_BIT(7))  ;
000106  f06f0080          MVN      r0,#0x80
;;;525       switch ( index)
00010a  b132              CBZ      r2,|L1.282|
00010c  2a01              CMP      r2,#1
00010e  d00c              BEQ      |L1.298|
000110  2a02              CMP      r2,#2
000112  d013              BEQ      |L1.316|
000114  2a03              CMP      r2,#3
000116  d123              BNE      |L1.352|
000118  e019              B        |L1.334|
                  |L1.282|
;;;526       {
;;;527          case 0:
;;;528             LPC_EMC->StaticConfig0 = (LPC_EMC->StaticConfig0  & mask)| pb_val;
00011a  4b5c              LDR      r3,|L1.652|
00011c  681b              LDR      r3,[r3,#0]
00011e  4003              ANDS     r3,r3,r0
000120  430b              ORRS     r3,r3,r1
000122  4c59              LDR      r4,|L1.648|
000124  f8c43200          STR      r3,[r4,#0x200]
;;;529    	   break;
000128  e01a              B        |L1.352|
                  |L1.298|
;;;530          case 1:
;;;531             LPC_EMC->StaticConfig1 = (LPC_EMC->StaticConfig1  & mask)| pb_val;
00012a  4b58              LDR      r3,|L1.652|
00012c  3320              ADDS     r3,r3,#0x20
00012e  681b              LDR      r3,[r3,#0]
000130  4003              ANDS     r3,r3,r0
000132  430b              ORRS     r3,r3,r1
000134  4c54              LDR      r4,|L1.648|
000136  f8c43220          STR      r3,[r4,#0x220]
;;;532    	   break;
00013a  e011              B        |L1.352|
                  |L1.316|
;;;533          case 2:
;;;534             LPC_EMC->StaticConfig2 =( LPC_EMC->StaticConfig2  & mask)| pb_val;
00013c  4b53              LDR      r3,|L1.652|
00013e  3340              ADDS     r3,r3,#0x40
000140  681b              LDR      r3,[r3,#0]
000142  4003              ANDS     r3,r3,r0
000144  430b              ORRS     r3,r3,r1
000146  4c50              LDR      r4,|L1.648|
000148  f8c43240          STR      r3,[r4,#0x240]
;;;535    	   break;
00014c  e008              B        |L1.352|
                  |L1.334|
;;;536          case 3:
;;;537             LPC_EMC->StaticConfig3 = (LPC_EMC->StaticConfig3  & mask)| pb_val;
00014e  4b4f              LDR      r3,|L1.652|
000150  3360              ADDS     r3,r3,#0x60
000152  681b              LDR      r3,[r3,#0]
000154  4003              ANDS     r3,r3,r0
000156  430b              ORRS     r3,r3,r1
000158  4c4b              LDR      r4,|L1.648|
00015a  f8c43260          STR      r3,[r4,#0x260]
;;;538    	   break;
00015e  bf00              NOP      
                  |L1.352|
000160  bf00              NOP                            ;529
;;;539       }
;;;540    }
000162  bd10              POP      {r4,pc}
;;;541    
                          ENDP

                  EMC_SetStaMemoryParameter PROC
;;;637     **********************************************************************/
;;;638    void EMC_SetStaMemoryParameter(uint32_t index ,EMC_STA_MEM_PAR par, uint32_t val)
000164  b130              CBZ      r0,|L1.372|
;;;639    {
;;;640       switch (index)
000166  2801              CMP      r0,#1
000168  d025              BEQ      |L1.438|
00016a  2802              CMP      r0,#2
00016c  d044              BEQ      |L1.504|
00016e  2803              CMP      r0,#3
000170  d120              BNE      |L1.436|
000172  e062              B        |L1.570|
                  |L1.372|
;;;641       {
;;;642       	case 0:
;;;643             switch ( par)
000174  2906              CMP      r1,#6
000176  d21c              BCS      |L1.434|
000178  e8dff001          TBB      [pc,r1]
00017c  03070b0f          DCB      0x03,0x07,0x0b,0x0f
000180  1317              DCB      0x13,0x17
;;;644             {
;;;645                case EMC_STA_MEM_WAITWEN:
;;;646                   LPC_EMC->StaticWaitWen0 = val;
000182  4b42              LDR      r3,|L1.652|
000184  1d1b              ADDS     r3,r3,#4
000186  601a              STR      r2,[r3,#0]
;;;647                   break;
000188  e013              B        |L1.434|
;;;648                case EMC_STA_MEM_WAITOEN:
;;;649                   LPC_EMC->StaticWaitOen0 = val;
00018a  4b40              LDR      r3,|L1.652|
00018c  3308              ADDS     r3,r3,#8
00018e  601a              STR      r2,[r3,#0]
;;;650                   break;
000190  e00f              B        |L1.434|
;;;651                case EMC_STA_MEM_WAITRD:
;;;652                   LPC_EMC->StaticWaitRd0 = val;
000192  4b3e              LDR      r3,|L1.652|
000194  330c              ADDS     r3,r3,#0xc
000196  601a              STR      r2,[r3,#0]
;;;653                   break;
000198  e00b              B        |L1.434|
;;;654                case EMC_STA_MEM_WAITPAGE:
;;;655                   LPC_EMC->StaticWaitPage0 = val;
00019a  4b3c              LDR      r3,|L1.652|
00019c  3310              ADDS     r3,r3,#0x10
00019e  601a              STR      r2,[r3,#0]
;;;656                   break;
0001a0  e007              B        |L1.434|
;;;657                case EMC_STA_MEM_WAITWR:
;;;658                   LPC_EMC->StaticWaitWr0 = val;
0001a2  4b3a              LDR      r3,|L1.652|
0001a4  3314              ADDS     r3,r3,#0x14
0001a6  601a              STR      r2,[r3,#0]
;;;659                   break;
0001a8  e003              B        |L1.434|
;;;660                case EMC_STA_MEM_WAITTURN:
;;;661                   LPC_EMC->StaticWaitTurn0 = val;
0001aa  4b38              LDR      r3,|L1.652|
0001ac  3318              ADDS     r3,r3,#0x18
0001ae  601a              STR      r2,[r3,#0]
;;;662                   break;
0001b0  bf00              NOP      
                  |L1.434|
0001b2  bf00              NOP                            ;647
                  |L1.436|
;;;663             }
;;;664    	   break;
0001b4  e062              B        |L1.636|
                  |L1.438|
;;;665       	case 1:
;;;666             switch ( par)
0001b6  2906              CMP      r1,#6
0001b8  d21c              BCS      |L1.500|
0001ba  e8dff001          TBB      [pc,r1]
0001be  0307              DCB      0x03,0x07
0001c0  0b0f1317          DCB      0x0b,0x0f,0x13,0x17
;;;667             {
;;;668                case EMC_STA_MEM_WAITWEN:
;;;669                   LPC_EMC->StaticWaitWen1 = val;
0001c4  4b31              LDR      r3,|L1.652|
0001c6  3324              ADDS     r3,r3,#0x24
0001c8  601a              STR      r2,[r3,#0]
;;;670                   break;
0001ca  e013              B        |L1.500|
;;;671                case EMC_STA_MEM_WAITOEN:
;;;672                   LPC_EMC->StaticWaitOen1 = val;
0001cc  4b2f              LDR      r3,|L1.652|
0001ce  3328              ADDS     r3,r3,#0x28
0001d0  601a              STR      r2,[r3,#0]
;;;673                   break;
0001d2  e00f              B        |L1.500|
;;;674                case EMC_STA_MEM_WAITRD:
;;;675                   LPC_EMC->StaticWaitRd1 = val;
0001d4  4b2d              LDR      r3,|L1.652|
0001d6  332c              ADDS     r3,r3,#0x2c
0001d8  601a              STR      r2,[r3,#0]
;;;676                   break;
0001da  e00b              B        |L1.500|
;;;677                case EMC_STA_MEM_WAITPAGE:
;;;678                   LPC_EMC->StaticWaitPage1 = val;
0001dc  4b2b              LDR      r3,|L1.652|
0001de  3330              ADDS     r3,r3,#0x30
0001e0  601a              STR      r2,[r3,#0]
;;;679                   break;
0001e2  e007              B        |L1.500|
;;;680                case EMC_STA_MEM_WAITWR:
;;;681                   LPC_EMC->StaticWaitWr1 = val;
0001e4  4b29              LDR      r3,|L1.652|
0001e6  3334              ADDS     r3,r3,#0x34
0001e8  601a              STR      r2,[r3,#0]
;;;682                   break;
0001ea  e003              B        |L1.500|
;;;683                case EMC_STA_MEM_WAITTURN:
;;;684                   LPC_EMC->StaticWaitTurn1 = val;
0001ec  4b27              LDR      r3,|L1.652|
0001ee  3338              ADDS     r3,r3,#0x38
0001f0  601a              STR      r2,[r3,#0]
;;;685                   break;
0001f2  bf00              NOP      
                  |L1.500|
0001f4  bf00              NOP                            ;670
;;;686             }
;;;687    	   break;
0001f6  e041              B        |L1.636|
                  |L1.504|
;;;688       	case 2:
;;;689             switch ( par)
0001f8  2906              CMP      r1,#6
0001fa  d21c              BCS      |L1.566|
0001fc  e8dff001          TBB      [pc,r1]
000200  03070b0f          DCB      0x03,0x07,0x0b,0x0f
000204  1317              DCB      0x13,0x17
;;;690             {
;;;691                case EMC_STA_MEM_WAITWEN:
;;;692                   LPC_EMC->StaticWaitWen2 = val;
000206  4b21              LDR      r3,|L1.652|
000208  3344              ADDS     r3,r3,#0x44
00020a  601a              STR      r2,[r3,#0]
;;;693                   break;
00020c  e013              B        |L1.566|
;;;694                case EMC_STA_MEM_WAITOEN:
;;;695                   LPC_EMC->StaticWaitOen2 = val;
00020e  4b1f              LDR      r3,|L1.652|
000210  3348              ADDS     r3,r3,#0x48
000212  601a              STR      r2,[r3,#0]
;;;696                   break;
000214  e00f              B        |L1.566|
;;;697                case EMC_STA_MEM_WAITRD:
;;;698                   LPC_EMC->StaticWaitRd2 = val;
000216  4b1d              LDR      r3,|L1.652|
000218  334c              ADDS     r3,r3,#0x4c
00021a  601a              STR      r2,[r3,#0]
;;;699                   break;
00021c  e00b              B        |L1.566|
;;;700                case EMC_STA_MEM_WAITPAGE:
;;;701                   LPC_EMC->StaticWaitPage2 = val;
00021e  4b1b              LDR      r3,|L1.652|
000220  3350              ADDS     r3,r3,#0x50
000222  601a              STR      r2,[r3,#0]
;;;702                   break;
000224  e007              B        |L1.566|
;;;703                case EMC_STA_MEM_WAITWR:
;;;704                   LPC_EMC->StaticWaitWr2 = val;
000226  4b19              LDR      r3,|L1.652|
000228  3354              ADDS     r3,r3,#0x54
00022a  601a              STR      r2,[r3,#0]
;;;705                   break;
00022c  e003              B        |L1.566|
;;;706                case EMC_STA_MEM_WAITTURN:
;;;707                   LPC_EMC->StaticWaitTurn2 = val;
00022e  4b17              LDR      r3,|L1.652|
000230  3358              ADDS     r3,r3,#0x58
000232  601a              STR      r2,[r3,#0]
;;;708                   break;
000234  bf00              NOP      
                  |L1.566|
000236  bf00              NOP                            ;693
;;;709             }
;;;710    	   break;
000238  e020              B        |L1.636|
                  |L1.570|
;;;711       	case 3:
;;;712             switch ( par)
00023a  2906              CMP      r1,#6
00023c  d21c              BCS      |L1.632|
00023e  e8dff001          TBB      [pc,r1]
000242  0307              DCB      0x03,0x07
000244  0b0f1317          DCB      0x0b,0x0f,0x13,0x17
;;;713             {
;;;714                case EMC_STA_MEM_WAITWEN:
;;;715                   LPC_EMC->StaticWaitWen3 = val;
000248  4b10              LDR      r3,|L1.652|
00024a  3364              ADDS     r3,r3,#0x64
00024c  601a              STR      r2,[r3,#0]
;;;716                   break;
00024e  e013              B        |L1.632|
;;;717                case EMC_STA_MEM_WAITOEN:
;;;718                   LPC_EMC->StaticWaitOen3 = val;
000250  4b0e              LDR      r3,|L1.652|
000252  3368              ADDS     r3,r3,#0x68
000254  601a              STR      r2,[r3,#0]
;;;719                   break;
000256  e00f              B        |L1.632|
;;;720                case EMC_STA_MEM_WAITRD:
;;;721                   LPC_EMC->StaticWaitRd3 = val;
000258  4b0c              LDR      r3,|L1.652|
00025a  336c              ADDS     r3,r3,#0x6c
00025c  601a              STR      r2,[r3,#0]
;;;722                   break;
00025e  e00b              B        |L1.632|
;;;723                case EMC_STA_MEM_WAITPAGE:
;;;724                   LPC_EMC->StaticWaitPage3 = val;
000260  4b0a              LDR      r3,|L1.652|
000262  3370              ADDS     r3,r3,#0x70
000264  601a              STR      r2,[r3,#0]
;;;725                   break;
000266  e007              B        |L1.632|
;;;726                case EMC_STA_MEM_WAITWR:
;;;727                   LPC_EMC->StaticWaitWr3 = val;
000268  4b08              LDR      r3,|L1.652|
00026a  3374              ADDS     r3,r3,#0x74
00026c  601a              STR      r2,[r3,#0]
;;;728                   break;
00026e  e003              B        |L1.632|
;;;729                case EMC_STA_MEM_WAITTURN:
;;;730                   LPC_EMC->StaticWaitTurn3 = val;
000270  4b06              LDR      r3,|L1.652|
000272  3378              ADDS     r3,r3,#0x78
000274  601a              STR      r2,[r3,#0]
;;;731                   break;
000276  bf00              NOP      
                  |L1.632|
000278  bf00              NOP                            ;716
;;;732             }
;;;733    	   break;
00027a  bf00              NOP      
                  |L1.636|
00027c  bf00              NOP                            ;664
;;;734       }
;;;735    }
00027e  4770              BX       lr
;;;736    
                          ENDP

                  |L1.640|
                          DCD      0x400fc0c4
                  |L1.644|
                          DCD      0x400fc1dc
                  |L1.648|
                          DCD      0x2009c000
                  |L1.652|
                          DCD      0x2009c200

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  EMC_ConfigEndianMode PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  4905              LDR      r1,|L2.24|
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  6889              LDR      r1,[r1,#8]
000004  f0010101          AND      r1,r1,#1
000008  4301              ORRS     r1,r1,r0
00000a  f2401201          MOV      r2,#0x101
00000e  4011              ANDS     r1,r1,r2
000010  4a01              LDR      r2,|L2.24|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  6091              STR      r1,[r2,#8]
000014  4770              BX       lr
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0x2009c000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  EMC_DynCtrlClockEnable PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  4902              LDR      r1,|L3.12|
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  6a09              LDR      r1,[r1,#0x20]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L3.12|
000008  6211              STR      r1,[r2,#0x20]
00000a  4770              BX       lr
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

                  |L3.12|
                          DCD      0x2009c000

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  EMC_DynCtrlClockControl PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  f06f0102          MVN      r1,#2
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000004  4a03              LDR      r2,|L4.20|
000006  6a12              LDR      r2,[r2,#0x20]
000008  400a              ANDS     r2,r2,r1
00000a  4302              ORRS     r2,r2,r0
00000c  4b01              LDR      r3,|L4.20|
00000e  621a              STR      r2,[r3,#0x20]
000010  4770              BX       lr
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000012  0000              DCW      0x0000
                  |L4.20|
                          DCD      0x2009c000

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  EMC_DynCtrlSelfRefresh PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  f06f0104          MVN      r1,#4
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000004  4a03              LDR      r2,|L5.20|
000006  6a12              LDR      r2,[r2,#0x20]
000008  400a              ANDS     r2,r2,r1
00000a  4302              ORRS     r2,r2,r0
00000c  4b01              LDR      r3,|L5.20|
00000e  621a              STR      r2,[r3,#0x20]
000010  4770              BX       lr
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000012  0000              DCW      0x0000
                  |L5.20|
                          DCD      0x2009c000

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.6||, ||.text||
                  EMC_DynCtrlMMC PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  f06f0120          MVN      r1,#0x20
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000004  4a03              LDR      r2,|L6.20|
000006  6a12              LDR      r2,[r2,#0x20]
000008  400a              ANDS     r2,r2,r1
00000a  4302              ORRS     r2,r2,r0
00000c  4b01              LDR      r3,|L6.20|
00000e  621a              STR      r2,[r3,#0x20]
000010  4770              BX       lr
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000012  0000              DCW      0x0000
                  |L6.20|
                          DCD      0x2009c000

                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  EMC_DynCtrlSDRAMInit PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  f46f71c0          MVN      r1,#0x180
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000004  4a03              LDR      r2,|L7.20|
000006  6a12              LDR      r2,[r2,#0x20]
000008  400a              ANDS     r2,r2,r1
00000a  4302              ORRS     r2,r2,r0
00000c  4b01              LDR      r3,|L7.20|
00000e  621a              STR      r2,[r3,#0x20]
000010  4770              BX       lr
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000012  0000              DCW      0x0000
                  |L7.20|
                          DCD      0x2009c000

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.text||
                  EMC_DynCtrlPowerDownMode PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  f46f5100          MVN      r1,#0x2000
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000004  4a03              LDR      r2,|L8.20|
000006  6a12              LDR      r2,[r2,#0x20]
000008  400a              ANDS     r2,r2,r1
00000a  4302              ORRS     r2,r2,r0
00000c  4b01              LDR      r3,|L8.20|
00000e  621a              STR      r2,[r3,#0x20]
000010  4770              BX       lr
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000012  0000              DCW      0x0000
                  |L8.20|
                          DCD      0x2009c000

                          AREA ||area_number.9||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.text||
                  EMC_SetDynMemoryParameter PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  280d              CMP      r0,#0xd
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  d22f              BCS      |L9.100|
000004  e8dff000          TBB      [pc,r0]
000008  070a0d10          DCB      0x07,0x0a,0x0d,0x10
00000c  1316191c          DCB      0x13,0x16,0x19,0x1c
000010  1f222528          DCB      0x1f,0x22,0x25,0x28
000014  2b00              DCB      0x2b,0x00
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000016  4a14              LDR      r2,|L9.104|
000018  6251              STR      r1,[r2,#0x24]
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  e023              B        |L9.100|
00001c  4a12              LDR      r2,|L9.104|
00001e  6291              STR      r1,[r2,#0x28]
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  e020              B        |L9.100|
000022  4a11              LDR      r2,|L9.104|
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000024  6311              STR      r1,[r2,#0x30]
000026  e01d              B        |L9.100|
000028  4a0f              LDR      r2,|L9.104|
00002a  6351              STR      r1,[r2,#0x34]
00002c  e01a              B        |L9.100|
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4a0e              LDR      r2,|L9.104|
000030  6391              STR      r1,[r2,#0x38]
000032  e017              B        |L9.100|
000034  4a0c              LDR      r2,|L9.104|
000036  63d1              STR      r1,[r2,#0x3c]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e014              B        |L9.100|
00003a  4a0b              LDR      r2,|L9.104|
00003c  6411              STR      r1,[r2,#0x40]
00003e  e011              B        |L9.100|
000040  4a09              LDR      r2,|L9.104|
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  6451              STR      r1,[r2,#0x44]
000044  e00e              B        |L9.100|
000046  4a08              LDR      r2,|L9.104|
000048  6491              STR      r1,[r2,#0x48]
00004a  e00b              B        |L9.100|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4a06              LDR      r2,|L9.104|
00004e  64d1              STR      r1,[r2,#0x4c]
000050  e008              B        |L9.100|
000052  4a05              LDR      r2,|L9.104|
000054  6511              STR      r1,[r2,#0x50]
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  e005              B        |L9.100|
000058  4a03              LDR      r2,|L9.104|
00005a  6551              STR      r1,[r2,#0x54]
00005c  e002              B        |L9.100|
00005e  4a02              LDR      r2,|L9.104|
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  6591              STR      r1,[r2,#0x58]
000062  bf00              NOP      
                  |L9.100|
000064  bf00              NOP      
000066  4770              BX       lr
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

                  |L9.104|
                          DCD      0x2009c000

                          AREA ||area_number.10||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.text||
                  EMC_StaticExtendedWait PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  4901              LDR      r1,|L10.8|
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  6008              STR      r0,[r1,#0]
000004  4770              BX       lr
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
;;;42     	  LPC_EMC->Control 	= 0x00000001;
;;;43     	  LPC_EMC->Config  	= 0x00000000;
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
;;;81     	PINSEL_ConfigPin(2,17,1);
;;;82     	PINSEL_ConfigPin(2,18,1);
;;;83     	PINSEL_ConfigPin(2,20,1);
;;;84     	PINSEL_ConfigPin(2,24,1);
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
;;;87     	PINSEL_ConfigPin(2,29,1);
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000006  0000              DCW      0x0000
                  |L10.8|
                          DCD      0x2009c080

                          AREA ||area_number.11||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.text||
                  EMC_DynMemConfigMD PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f06f0018          MVN      r0,#0x18
000008  b132              CBZ      r2,|L11.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L11.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L11.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L11.94|
000016  e019              B        |L11.76|
                  |L11.24|
000018  4b12              LDR      r3,|L11.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L11.104|
000022  f8c43100          STR      r3,[r4,#0x100]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L11.94|
                  |L11.40|
000028  4b0e              LDR      r3,|L11.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L11.104|
000034  f8c43120          STR      r3,[r4,#0x120]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L11.94|
                  |L11.58|
00003a  4b0a              LDR      r3,|L11.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L11.104|
000046  f8c43140          STR      r3,[r4,#0x140]
00004a  e008              B        |L11.94|
                  |L11.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L11.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L11.104|
000058  f8c43160          STR      r3,[r4,#0x160]
00005c  bf00              NOP      
                  |L11.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L11.100|
                          DCD      0x2009c100
                  |L11.104|
                          DCD      0x2009c000

                          AREA ||area_number.12||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.text||
                  EMC_DynMemConfigAM PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f04f30ff          MOV      r0,#0xffffffff
000008  b132              CBZ      r2,|L12.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L12.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L12.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L12.94|
000016  e019              B        |L12.76|
                  |L12.24|
000018  4b12              LDR      r3,|L12.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L12.104|
000022  f8c43100          STR      r3,[r4,#0x100]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L12.94|
                  |L12.40|
000028  4b0e              LDR      r3,|L12.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L12.104|
000034  f8c43120          STR      r3,[r4,#0x120]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L12.94|
                  |L12.58|
00003a  4b0a              LDR      r3,|L12.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L12.104|
000046  f8c43140          STR      r3,[r4,#0x140]
00004a  e008              B        |L12.94|
                  |L12.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L12.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L12.104|
000058  f8c43160          STR      r3,[r4,#0x160]
00005c  bf00              NOP      
                  |L12.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L12.100|
                          DCD      0x2009c100
                  |L12.104|
                          DCD      0x2009c000

                          AREA ||area_number.13||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.text||
                  EMC_DynMemConfigB PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f46f2000          MVN      r0,#0x80000
000008  b132              CBZ      r2,|L13.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L13.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L13.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L13.94|
000016  e019              B        |L13.76|
                  |L13.24|
000018  4b12              LDR      r3,|L13.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L13.104|
000022  f8c43100          STR      r3,[r4,#0x100]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L13.94|
                  |L13.40|
000028  4b0e              LDR      r3,|L13.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L13.104|
000034  f8c43120          STR      r3,[r4,#0x120]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L13.94|
                  |L13.58|
00003a  4b0a              LDR      r3,|L13.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L13.104|
000046  f8c43140          STR      r3,[r4,#0x140]
00004a  e008              B        |L13.94|
                  |L13.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L13.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L13.104|
000058  f8c43160          STR      r3,[r4,#0x160]
00005c  bf00              NOP      
                  |L13.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L13.100|
                          DCD      0x2009c100
                  |L13.104|
                          DCD      0x2009c000

                          AREA ||area_number.14||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.text||
                  EMC_DynMemConfigP PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f46f1080          MVN      r0,#0x100000
000008  b132              CBZ      r2,|L14.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L14.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L14.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L14.94|
000016  e019              B        |L14.76|
                  |L14.24|
000018  4b12              LDR      r3,|L14.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L14.104|
000022  f8c43100          STR      r3,[r4,#0x100]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L14.94|
                  |L14.40|
000028  4b0e              LDR      r3,|L14.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L14.104|
000034  f8c43120          STR      r3,[r4,#0x120]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L14.94|
                  |L14.58|
00003a  4b0a              LDR      r3,|L14.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L14.104|
000046  f8c43140          STR      r3,[r4,#0x140]
00004a  e008              B        |L14.94|
                  |L14.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L14.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L14.104|
000058  f8c43160          STR      r3,[r4,#0x160]
00005c  bf00              NOP      
                  |L14.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L14.100|
                          DCD      0x2009c100
                  |L14.104|
                          DCD      0x2009c000

                          AREA ||area_number.15||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.text||
                  EMC_DynMemRAS PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f06f0003          MVN      r0,#3
000008  b132              CBZ      r2,|L15.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L15.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L15.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L15.94|
000016  e019              B        |L15.76|
                  |L15.24|
000018  4b12              LDR      r3,|L15.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L15.104|
000022  f8c43104          STR      r3,[r4,#0x104]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L15.94|
                  |L15.40|
000028  4b0e              LDR      r3,|L15.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L15.104|
000034  f8c43124          STR      r3,[r4,#0x124]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L15.94|
                  |L15.58|
00003a  4b0a              LDR      r3,|L15.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L15.104|
000046  f8c43144          STR      r3,[r4,#0x144]
00004a  e008              B        |L15.94|
                  |L15.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L15.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L15.104|
000058  f8c43164          STR      r3,[r4,#0x164]
00005c  bf00              NOP      
                  |L15.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L15.100|
                          DCD      0x2009c104
                  |L15.104|
                          DCD      0x2009c000

                          AREA ||area_number.16||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.text||
                  EMC_DynMemCAS PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f46f7040          MVN      r0,#0x300
000008  b132              CBZ      r2,|L16.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L16.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L16.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L16.94|
000016  e019              B        |L16.76|
                  |L16.24|
000018  4b12              LDR      r3,|L16.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L16.104|
000022  f8c43104          STR      r3,[r4,#0x104]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L16.94|
                  |L16.40|
000028  4b0e              LDR      r3,|L16.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L16.104|
000034  f8c43124          STR      r3,[r4,#0x124]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L16.94|
                  |L16.58|
00003a  4b0a              LDR      r3,|L16.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L16.104|
000046  f8c43144          STR      r3,[r4,#0x144]
00004a  e008              B        |L16.94|
                  |L16.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L16.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L16.104|
000058  f8c43164          STR      r3,[r4,#0x164]
00005c  bf00              NOP      
                  |L16.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L16.100|
                          DCD      0x2009c104
                  |L16.104|
                          DCD      0x2009c000

                          AREA ||area_number.17||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.text||
                  EMC_StaMemConfigPM PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f06f0008          MVN      r0,#8
000008  b132              CBZ      r2,|L17.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L17.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L17.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L17.94|
000016  e019              B        |L17.76|
                  |L17.24|
000018  4b12              LDR      r3,|L17.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L17.104|
000022  f8c43200          STR      r3,[r4,#0x200]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L17.94|
                  |L17.40|
000028  4b0e              LDR      r3,|L17.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L17.104|
000034  f8c43220          STR      r3,[r4,#0x220]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L17.94|
                  |L17.58|
00003a  4b0a              LDR      r3,|L17.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L17.104|
000046  f8c43240          STR      r3,[r4,#0x240]
00004a  e008              B        |L17.94|
                  |L17.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L17.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L17.104|
000058  f8c43260          STR      r3,[r4,#0x260]
00005c  bf00              NOP      
                  |L17.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L17.100|
                          DCD      0x2009c200
                  |L17.104|
                          DCD      0x2009c000

                          AREA ||area_number.18||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.18||, ||.text||
                  EMC_StaMemConfigPC PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f06f0040          MVN      r0,#0x40
000008  b132              CBZ      r2,|L18.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L18.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L18.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L18.94|
000016  e019              B        |L18.76|
                  |L18.24|
000018  4b12              LDR      r3,|L18.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L18.104|
000022  f8c43200          STR      r3,[r4,#0x200]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L18.94|
                  |L18.40|
000028  4b0e              LDR      r3,|L18.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L18.104|
000034  f8c43220          STR      r3,[r4,#0x220]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L18.94|
                  |L18.58|
00003a  4b0a              LDR      r3,|L18.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L18.104|
000046  f8c43240          STR      r3,[r4,#0x240]
00004a  e008              B        |L18.94|
                  |L18.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L18.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L18.104|
000058  f8c43260          STR      r3,[r4,#0x260]
00005c  bf00              NOP      
                  |L18.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L18.100|
                          DCD      0x2009c200
                  |L18.104|
                          DCD      0x2009c000

                          AREA ||area_number.19||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.19||, ||.text||
                  EMC_StaMemConfigEW PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f46f7080          MVN      r0,#0x100
000008  b132              CBZ      r2,|L19.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L19.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L19.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L19.94|
000016  e019              B        |L19.76|
                  |L19.24|
000018  4b12              LDR      r3,|L19.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L19.104|
000022  f8c43200          STR      r3,[r4,#0x200]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L19.94|
                  |L19.40|
000028  4b0e              LDR      r3,|L19.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L19.104|
000034  f8c43220          STR      r3,[r4,#0x220]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L19.94|
                  |L19.58|
00003a  4b0a              LDR      r3,|L19.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L19.104|
000046  f8c43240          STR      r3,[r4,#0x240]
00004a  e008              B        |L19.94|
                  |L19.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L19.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L19.104|
000058  f8c43260          STR      r3,[r4,#0x260]
00005c  bf00              NOP      
                  |L19.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L19.100|
                          DCD      0x2009c200
                  |L19.104|
                          DCD      0x2009c000

                          AREA ||area_number.20||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.20||, ||.text||
                  EMC_StaMemConfigB PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f46f2000          MVN      r0,#0x80000
000008  b132              CBZ      r2,|L20.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L20.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L20.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L20.94|
000016  e019              B        |L20.76|
                  |L20.24|
000018  4b12              LDR      r3,|L20.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L20.104|
000022  f8c43200          STR      r3,[r4,#0x200]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L20.94|
                  |L20.40|
000028  4b0e              LDR      r3,|L20.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L20.104|
000034  f8c43220          STR      r3,[r4,#0x220]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L20.94|
                  |L20.58|
00003a  4b0a              LDR      r3,|L20.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L20.104|
000046  f8c43240          STR      r3,[r4,#0x240]
00004a  e008              B        |L20.94|
                  |L20.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L20.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L20.104|
000058  f8c43260          STR      r3,[r4,#0x260]
00005c  bf00              NOP      
                  |L20.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L20.100|
                          DCD      0x2009c200
                  |L20.104|
                          DCD      0x2009c000

                          AREA ||area_number.21||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.text||
                  EMC_StaMemConfigpP PROC
;;;30      **********************************************************************/
;;;31     void EMC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33     	uint8_t i;
;;;34     
;;;35     	/* Enable clock for EMC */
;;;36     //	CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCEMC, ENABLE);
;;;37     //	LPC_EMC->Control 	= 0x00000001;
;;;38     // 	LPC_EMC->Config  	= 0x00000000;
;;;39     
;;;40     	  LPC_SC->PCONP   	|= 0x00000800;
000002  4602              MOV      r2,r0
000004  f46f1080          MVN      r0,#0x100000
000008  b132              CBZ      r2,|L21.24|
00000a  2a01              CMP      r2,#1
00000c  d00c              BEQ      |L21.40|
00000e  2a02              CMP      r2,#2
000010  d013              BEQ      |L21.58|
;;;41     	  LPC_SC->EMCDLYCTL   = 0x00001010;
000012  2a03              CMP      r2,#3
000014  d123              BNE      |L21.94|
000016  e019              B        |L21.76|
                  |L21.24|
000018  4b12              LDR      r3,|L21.100|
;;;42     	  LPC_EMC->Control 	= 0x00000001;
00001a  681b              LDR      r3,[r3,#0]
00001c  4003              ANDS     r3,r3,r0
00001e  430b              ORRS     r3,r3,r1
;;;43     	  LPC_EMC->Config  	= 0x00000000;
000020  4c11              LDR      r4,|L21.104|
000022  f8c43200          STR      r3,[r4,#0x200]
;;;44     
;;;45       /* Pin configuration:
;;;46        * P2.14 - /EMC_CS2
;;;47        * P2.15 - /EMC_CS3
;;;48        *
;;;49        * P2.16 - /EMC_CAS
;;;50        * P2.17 - /EMC_RAS
;;;51        * P2.18 - EMC_CLK[0]
;;;52        * P2.19 - EMC_CLK[1]
;;;53        *
;;;54        * P2.20 - EMC_DYCS0
;;;55        * P2.21 - EMC_DYCS1
;;;56        * P2.22 - EMC_DYCS2
;;;57        * P2.23 - EMC_DYCS3
;;;58        *
;;;59        * P2.24 - EMC_CKE0
;;;60        * P2.25 - EMC_CKE1
;;;61        * P2.26 - EMC_CKE2
;;;62        * P2.27 - EMC_CKE3
;;;63        *
;;;64        * P2.28 - EMC_DQM0
;;;65        * P2.29 - EMC_DQM1
;;;66        * P2.30 - EMC_DQM2
;;;67        * P2.31 - EMC_DQM3
;;;68        *
;;;69        * P3.0-P3.31 - EMC_D[0-31]
;;;70        * P4.0-P4.23 - EMC_A[0-23]
;;;71        *
;;;72        * P4.24 - /EMC_OE
;;;73        * P4.25 - /EMC_WE
;;;74        *
;;;75        * P4.30 - /EMC_CS0
;;;76        * P4.31 - /EMC_CS1
;;;77        */
;;;78     //	PINSEL_ConfigPin(2,14,1);
;;;79     //	PINSEL_ConfigPin(2,15,1);
;;;80     	PINSEL_ConfigPin(2,16,1);
000026  e01a              B        |L21.94|
                  |L21.40|
000028  4b0e              LDR      r3,|L21.100|
00002a  3320              ADDS     r3,r3,#0x20
00002c  681b              LDR      r3,[r3,#0]
;;;81     	PINSEL_ConfigPin(2,17,1);
00002e  4003              ANDS     r3,r3,r0
000030  430b              ORRS     r3,r3,r1
000032  4c0d              LDR      r4,|L21.104|
000034  f8c43220          STR      r3,[r4,#0x220]
;;;82     	PINSEL_ConfigPin(2,18,1);
000038  e011              B        |L21.94|
                  |L21.58|
00003a  4b0a              LDR      r3,|L21.100|
00003c  3340              ADDS     r3,r3,#0x40
00003e  681b              LDR      r3,[r3,#0]
000040  4003              ANDS     r3,r3,r0
;;;83     	PINSEL_ConfigPin(2,20,1);
000042  430b              ORRS     r3,r3,r1
000044  4c08              LDR      r4,|L21.104|
000046  f8c43240          STR      r3,[r4,#0x240]
00004a  e008              B        |L21.94|
                  |L21.76|
;;;84     	PINSEL_ConfigPin(2,24,1);
00004c  4b05              LDR      r3,|L21.100|
00004e  3360              ADDS     r3,r3,#0x60
000050  681b              LDR      r3,[r3,#0]
000052  4003              ANDS     r3,r3,r0
000054  430b              ORRS     r3,r3,r1
;;;85     
;;;86     	PINSEL_ConfigPin(2,28,1);
000056  4c04              LDR      r4,|L21.104|
000058  f8c43260          STR      r3,[r4,#0x260]
00005c  bf00              NOP      
                  |L21.94|
00005e  bf00              NOP      
;;;87     	PINSEL_ConfigPin(2,29,1);
000060  bd10              POP      {r4,pc}
;;;88     	PINSEL_ConfigPin(2,30,1);
;;;89     	PINSEL_ConfigPin(2,31,1);
;;;90     
;;;91     	for(i = 0; i < 32; i++)
;;;92     	{
;;;93     		PINSEL_ConfigPin(3,i,1);
;;;94     		PINSEL_ConfigPin(4,i,1);
;;;95     	}
;;;96     }
;;;97     /*********************************************************************//**
                          ENDP

000062  0000              DCW      0x0000
                  |L21.100|
                          DCD      0x2009c200
                  |L21.104|
                          DCD      0x2009c000

; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\lpc177x_8x_gpio.o --asm_dir=.\ --list_dir=.\ --depend=.\flash\lpc177x_8x_gpio.d --feedback=.\Flash\YL_LPC1788_Test.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\CM3_lib -I..\Drivers -I..\Startup -I.\Easy_web -I.\Lcd_Drv -I.\IIC_Test -I.\USU_Host -I.\Nand_Test -I.\FATFS_R0.08 -I..\fs -I"D:\Program Files\mdk\ARM\RV31\INC" -I"D:\Program Files\mdk\pack\ARM\CMSIS\4.1.1\CMSIS\Include" -I"D:\Program Files\mdk\ARM\Inc\NXP\LPC177x_8x" -D__MICROLIB --omf_browse=.\flash\lpc177x_8x_gpio.crf ..\Drivers\lpc177x_8x_gpio.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GPIO_GetPointer PROC
;;;39      **********************************************************************/
;;;40     static LPC_GPIO_TypeDef *GPIO_GetPointer(uint8_t portNum)
000000  4601              MOV      r1,r0
;;;41     {
;;;42     	LPC_GPIO_TypeDef *pGPIO = NULL;
000002  2000              MOVS     r0,#0
;;;43     
;;;44     	switch (portNum)
000004  2906              CMP      r1,#6
000006  d215              BCS      |L1.52|
000008  e8dff001          TBB      [pc,r1]
00000c  0305080b          DCB      0x03,0x05,0x08,0x0b
000010  0e11              DCB      0x0e,0x11
;;;45     	{
;;;46     		case 0:
;;;47     			pGPIO = LPC_GPIO0;
000012  4825              LDR      r0,|L1.168|
;;;48     			break;
000014  e00f              B        |L1.54|
;;;49     
;;;50     		case 1:
;;;51     			pGPIO = LPC_GPIO1;
000016  4824              LDR      r0,|L1.168|
000018  3020              ADDS     r0,r0,#0x20
;;;52     			break;
00001a  e00c              B        |L1.54|
;;;53     
;;;54     		case 2:
;;;55     			pGPIO = LPC_GPIO2;
00001c  4822              LDR      r0,|L1.168|
00001e  3040              ADDS     r0,r0,#0x40
;;;56     			break;
000020  e009              B        |L1.54|
;;;57     
;;;58     		case 3:
;;;59     			pGPIO = LPC_GPIO3;
000022  4821              LDR      r0,|L1.168|
000024  3060              ADDS     r0,r0,#0x60
;;;60     			break;
000026  e006              B        |L1.54|
;;;61     
;;;62     		case 4:
;;;63     			pGPIO = LPC_GPIO4;
000028  481f              LDR      r0,|L1.168|
00002a  3080              ADDS     r0,r0,#0x80
;;;64     			break;
00002c  e003              B        |L1.54|
;;;65     
;;;66     		case 5:
;;;67     			pGPIO = LPC_GPIO5;
00002e  481e              LDR      r0,|L1.168|
000030  30a0              ADDS     r0,r0,#0xa0
;;;68     			break;
000032  e000              B        |L1.54|
                  |L1.52|
;;;69     
;;;70     		default:
;;;71     			break;
000034  bf00              NOP      
                  |L1.54|
000036  bf00              NOP                            ;48
;;;72     	}
;;;73     
;;;74     	return pGPIO;
;;;75     }
000038  4770              BX       lr
;;;76     
                          ENDP

                  FIO_HalfWordGetPointer PROC
;;;82      **********************************************************************/
;;;83     static GPIO_HalfWord_TypeDef *FIO_HalfWordGetPointer(uint8_t portNum)
00003a  4601              MOV      r1,r0
;;;84     {
;;;85     	GPIO_HalfWord_TypeDef *pFIO = NULL;
00003c  2000              MOVS     r0,#0
;;;86     
;;;87     	switch (portNum)
00003e  2906              CMP      r1,#6
000040  d215              BCS      |L1.110|
000042  e8dff001          TBB      [pc,r1]
000046  0305              DCB      0x03,0x05
000048  080b0e11          DCB      0x08,0x0b,0x0e,0x11
;;;88     	{
;;;89     		case 0:
;;;90     			pFIO = GPIO0_HalfWord;
00004c  4816              LDR      r0,|L1.168|
;;;91     			break;
00004e  e00f              B        |L1.112|
;;;92     
;;;93     		case 1:
;;;94     			pFIO = GPIO1_HalfWord;
000050  4815              LDR      r0,|L1.168|
000052  3020              ADDS     r0,r0,#0x20
;;;95     			break;
000054  e00c              B        |L1.112|
;;;96     
;;;97     		case 2:
;;;98     			pFIO = GPIO2_HalfWord;
000056  4814              LDR      r0,|L1.168|
000058  3040              ADDS     r0,r0,#0x40
;;;99     			break;
00005a  e009              B        |L1.112|
;;;100    
;;;101    		case 3:
;;;102    			pFIO = GPIO3_HalfWord;
00005c  4812              LDR      r0,|L1.168|
00005e  3060              ADDS     r0,r0,#0x60
;;;103    			break;
000060  e006              B        |L1.112|
;;;104    
;;;105    		case 4:
;;;106    			pFIO = GPIO4_HalfWord;
000062  4811              LDR      r0,|L1.168|
000064  3080              ADDS     r0,r0,#0x80
;;;107    			break;
000066  e003              B        |L1.112|
;;;108    
;;;109    		case 5:
;;;110    			pFIO = GPIO5_HalfWord;
000068  480f              LDR      r0,|L1.168|
00006a  30a0              ADDS     r0,r0,#0xa0
;;;111    			break;
00006c  e000              B        |L1.112|
                  |L1.110|
;;;112    
;;;113    		default:
;;;114    			break;
00006e  bf00              NOP      
                  |L1.112|
000070  bf00              NOP                            ;91
;;;115    	}
;;;116    
;;;117    	return pFIO;
;;;118    }
000072  4770              BX       lr
;;;119    
                          ENDP

                  FIO_ByteGetPointer PROC
;;;125     **********************************************************************/
;;;126    static GPIO_Byte_TypeDef *FIO_ByteGetPointer(uint8_t portNum)
000074  4601              MOV      r1,r0
;;;127    {
;;;128    	GPIO_Byte_TypeDef *pFIO = NULL;
000076  2000              MOVS     r0,#0
;;;129    
;;;130    	switch (portNum)
000078  2905              CMP      r1,#5
00007a  d212              BCS      |L1.162|
00007c  e8dff001          TBB      [pc,r1]
000080  0305080b          DCB      0x03,0x05,0x08,0x0b
000084  0e00              DCB      0x0e,0x00
;;;131    	{
;;;132    		case 0:
;;;133    			pFIO = GPIO0_Byte;
000086  4808              LDR      r0,|L1.168|
;;;134    			break;
000088  e00c              B        |L1.164|
;;;135    
;;;136    		case 1:
;;;137    			pFIO = GPIO1_Byte;
00008a  4807              LDR      r0,|L1.168|
00008c  3020              ADDS     r0,r0,#0x20
;;;138    			break;
00008e  e009              B        |L1.164|
;;;139    
;;;140    		case 2:
;;;141    			pFIO = GPIO2_Byte;
000090  4805              LDR      r0,|L1.168|
000092  3040              ADDS     r0,r0,#0x40
;;;142    			break;
000094  e006              B        |L1.164|
;;;143    
;;;144    		case 3:
;;;145    			pFIO = GPIO3_Byte;
000096  4804              LDR      r0,|L1.168|
000098  3060              ADDS     r0,r0,#0x60
;;;146    			break;
00009a  e003              B        |L1.164|
;;;147    
;;;148    		case 4:
;;;149    			pFIO = GPIO4_Byte;
00009c  4802              LDR      r0,|L1.168|
00009e  3080              ADDS     r0,r0,#0x80
;;;150    			break;
0000a0  e000              B        |L1.164|
                  |L1.162|
;;;151    
;;;152    		default:
;;;153    			break;
0000a2  bf00              NOP      
                  |L1.164|
0000a4  bf00              NOP                            ;134
;;;154    	}
;;;155    
;;;156    	return pFIO;
;;;157    }
0000a6  4770              BX       lr
;;;158    
                          ENDP

                  |L1.168|
                          DCD      0x20098000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.2||, ||.text||
                  GPIO_SetDir PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       GPIO_GetPointer
000010  4604              MOV      r4,r0
;;;187    
;;;188    	if (pGPIO != NULL)
000012  b13c              CBZ      r4,|L2.36|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b11e              CBZ      r6,|L2.30|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  6820              LDR      r0,[r4,#0]
000018  4328              ORRS     r0,r0,r5
00001a  6020              STR      r0,[r4,#0]
00001c  e002              B        |L2.36|
                  |L2.30|
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  6820              LDR      r0,[r4,#0]
000020  43a8              BICS     r0,r0,r5
000022  6020              STR      r0,[r4,#0]
                  |L2.36|
;;;199    		}
;;;200    	}
;;;201    }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;202    
                          ENDP


                          AREA ||area_number.3||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.3||, ||.text||
                  GPIO_SetValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GPIO_GetPointer
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000c  4605              MOV      r5,r0
00000e  b105              CBZ      r5,|L3.18|
000010  61ac              STR      r4,[r5,#0x18]
                  |L3.18|
;;;187    
;;;188    	if (pGPIO != NULL)
000012  bd70              POP      {r4-r6,pc}
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.4||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.4||, ||.text||
                  GPIO_ClearValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       GPIO_GetPointer
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000c  4605              MOV      r5,r0
00000e  b105              CBZ      r5,|L4.18|
000010  61ec              STR      r4,[r5,#0x1c]
                  |L4.18|
;;;187    
;;;188    	if (pGPIO != NULL)
000012  bd70              POP      {r4-r6,pc}
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.5||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.5||, ||.text||
                  GPIO_OutputValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
000008  b924              CBNZ     r4,|L5.20|
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4631              MOV      r1,r6
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       GPIO_ClearValue
;;;187    
;;;188    	if (pGPIO != NULL)
000012  e003              B        |L5.28|
                  |L5.20|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  4631              MOV      r1,r6
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  4628              MOV      r0,r5
000018  f7fffffe          BL       GPIO_SetValue
                  |L5.28|
00001c  bd70              POP      {r4-r6,pc}
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.6||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.6||, ||.text||
                  GPIO_ReadValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4605              MOV      r5,r0
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       GPIO_GetPointer
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4604              MOV      r4,r0
00000c  b10c              CBZ      r4,|L6.18|
00000e  6960              LDR      r0,[r4,#0x14]
                  |L6.16|
000010  bd70              POP      {r4-r6,pc}
                  |L6.18|
;;;187    
;;;188    	if (pGPIO != NULL)
000012  2000              MOVS     r0,#0
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  e7fc              B        |L6.16|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.7||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.text||
                  GPIO_IntCmd PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b510              PUSH     {r4,lr}
;;;185    {
000002  b940              CBNZ     r0,|L7.22|
000004  b93a              CBNZ     r2,|L7.22|
000006  4b18              LDR      r3,|L7.104|
000008  681b              LDR      r3,[r3,#0]
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  430b              ORRS     r3,r3,r1
00000c  4c16              LDR      r4,|L7.104|
00000e  3c90              SUBS     r4,r4,#0x90
000010  f8c43090          STR      r3,[r4,#0x90]
;;;187    
;;;188    	if (pGPIO != NULL)
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  e026              B        |L7.100|
                  |L7.22|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  2802              CMP      r0,#2
000018  d109              BNE      |L7.46|
00001a  b942              CBNZ     r2,|L7.46|
00001c  4b12              LDR      r3,|L7.104|
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  3320              ADDS     r3,r3,#0x20
000020  681b              LDR      r3,[r3,#0]
000022  430b              ORRS     r3,r3,r1
;;;199    		}
;;;200    	}
;;;201    }
000024  4c10              LDR      r4,|L7.104|
000026  3c90              SUBS     r4,r4,#0x90
000028  f8c430b0          STR      r3,[r4,#0xb0]
00002c  e01a              B        |L7.100|
                  |L7.46|
00002e  b950              CBNZ     r0,|L7.70|
000030  2a01              CMP      r2,#1
000032  d108              BNE      |L7.70|
000034  4b0c              LDR      r3,|L7.104|
000036  1d1b              ADDS     r3,r3,#4
000038  681b              LDR      r3,[r3,#0]
00003a  430b              ORRS     r3,r3,r1
00003c  4c0a              LDR      r4,|L7.104|
00003e  3c90              SUBS     r4,r4,#0x90
000040  f8c43094          STR      r3,[r4,#0x94]
000044  e00e              B        |L7.100|
                  |L7.70|
000046  2802              CMP      r0,#2
000048  d10a              BNE      |L7.96|
00004a  2a01              CMP      r2,#1
00004c  d108              BNE      |L7.96|
00004e  4b06              LDR      r3,|L7.104|
000050  3324              ADDS     r3,r3,#0x24
000052  681b              LDR      r3,[r3,#0]
000054  430b              ORRS     r3,r3,r1
000056  4c04              LDR      r4,|L7.104|
000058  3c90              SUBS     r4,r4,#0x90
00005a  f8c430b4          STR      r3,[r4,#0xb4]
00005e  e001              B        |L7.100|
                  |L7.96|
000060  bf00              NOP      
                  |L7.98|
000062  e7fe              B        |L7.98|
                  |L7.100|
000064  bd10              POP      {r4,pc}
;;;202    
                          ENDP

000066  0000              DCW      0x0000
                  |L7.104|
                          DCD      0x40028090

                          AREA ||area_number.8||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.text||
                  GPIO_GetIntStatus PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  4603              MOV      r3,r0
;;;185    {
000002  b933              CBNZ     r3,|L8.18|
000004  b92a              CBNZ     r2,|L8.18|
000006  4813              LDR      r0,|L8.84|
000008  6800              LDR      r0,[r0,#0]
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  40c8              LSRS     r0,r0,r1
00000c  f0000001          AND      r0,r0,#1
                  |L8.16|
000010  4770              BX       lr
                  |L8.18|
;;;187    
;;;188    	if (pGPIO != NULL)
000012  2b02              CMP      r3,#2
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  d107              BNE      |L8.38|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  b932              CBNZ     r2,|L8.38|
000018  480e              LDR      r0,|L8.84|
00001a  3020              ADDS     r0,r0,#0x20
00001c  6800              LDR      r0,[r0,#0]
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  40c8              LSRS     r0,r0,r1
000020  f0000001          AND      r0,r0,#1
;;;199    		}
;;;200    	}
;;;201    }
000024  e7f4              B        |L8.16|
                  |L8.38|
000026  b943              CBNZ     r3,|L8.58|
000028  2a01              CMP      r2,#1
00002a  d106              BNE      |L8.58|
00002c  4809              LDR      r0,|L8.84|
00002e  1d00              ADDS     r0,r0,#4
000030  6800              LDR      r0,[r0,#0]
000032  40c8              LSRS     r0,r0,r1
000034  f0000001          AND      r0,r0,#1
000038  e7ea              B        |L8.16|
                  |L8.58|
00003a  2b02              CMP      r3,#2
00003c  d108              BNE      |L8.80|
00003e  2a01              CMP      r2,#1
000040  d106              BNE      |L8.80|
000042  4804              LDR      r0,|L8.84|
000044  3024              ADDS     r0,r0,#0x24
000046  6800              LDR      r0,[r0,#0]
000048  40c8              LSRS     r0,r0,r1
00004a  f0000001          AND      r0,r0,#1
00004e  e7df              B        |L8.16|
                  |L8.80|
000050  bf00              NOP      
                  |L8.82|
000052  e7fe              B        |L8.82|
;;;202    
                          ENDP

                  |L8.84|
                          DCD      0x40028084

                          AREA ||area_number.9||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.text||
                  GPIO_ClearInt PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b910              CBNZ     r0,|L9.8|
;;;185    {
000002  4a06              LDR      r2,|L9.28|
000004  6011              STR      r1,[r2,#0]
000006  e007              B        |L9.24|
                  |L9.8|
000008  2802              CMP      r0,#2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  d103              BNE      |L9.20|
00000c  4a03              LDR      r2,|L9.28|
00000e  3220              ADDS     r2,r2,#0x20
000010  6011              STR      r1,[r2,#0]
;;;187    
;;;188    	if (pGPIO != NULL)
000012  e001              B        |L9.24|
                  |L9.20|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  bf00              NOP      
                  |L9.22|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  e7fe              B        |L9.22|
                  |L9.24|
000018  4770              BX       lr
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP

00001a  0000              DCW      0x0000
                  |L9.28|
                          DCD      0x4002808c

                          AREA ||area_number.10||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.text||
                  FIO_SetDir PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  4632              MOV      r2,r6
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GPIO_SetDir
;;;187    
;;;188    	if (pGPIO != NULL)
000012  bd70              POP      {r4-r6,pc}
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.11||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.text||
                  FIO_SetValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  f7fffffe          BL       GPIO_SetValue
00000e  bd70              POP      {r4-r6,pc}
;;;187    
;;;188    	if (pGPIO != NULL)
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.12||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.text||
                  FIO_ClearValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  f7fffffe          BL       GPIO_ClearValue
00000e  bd70              POP      {r4-r6,pc}
;;;187    
;;;188    	if (pGPIO != NULL)
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.13||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.13||, ||.text||
                  FIO_ReadValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b510              PUSH     {r4,lr}
;;;185    {
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       GPIO_ReadValue
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  bd10              POP      {r4,pc}
;;;187    
;;;188    	if (pGPIO != NULL)
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.14||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.14||, ||.text||
                  FIO_IntCmd PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  4632              MOV      r2,r6
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GPIO_IntCmd
;;;187    
;;;188    	if (pGPIO != NULL)
000012  bd70              POP      {r4-r6,pc}
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.15||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.15||, ||.text||
                  FIO_GetIntStatus PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  4632              MOV      r2,r6
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       GPIO_GetIntStatus
;;;187    
;;;188    	if (pGPIO != NULL)
000012  bd70              POP      {r4-r6,pc}
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.16||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.16||, ||.text||
                  FIO_ClearInt PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b510              PUSH     {r4,lr}
;;;185    {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
000006  4621              MOV      r1,r4
000008  4618              MOV      r0,r3
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  f7fffffe          BL       GPIO_ClearInt
00000e  bd10              POP      {r4,pc}
;;;187    
;;;188    	if (pGPIO != NULL)
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.17||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.17||, ||.text||
                  FIO_SetMask PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       GPIO_GetPointer
000010  4604              MOV      r4,r0
;;;187    
;;;188    	if (pGPIO != NULL)
000012  b13c              CBZ      r4,|L17.36|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b11e              CBZ      r6,|L17.30|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  6920              LDR      r0,[r4,#0x10]
000018  4328              ORRS     r0,r0,r5
00001a  6120              STR      r0,[r4,#0x10]
00001c  e002              B        |L17.36|
                  |L17.30|
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  6920              LDR      r0,[r4,#0x10]
000020  43a8              BICS     r0,r0,r5
000022  6120              STR      r0,[r4,#0x10]
                  |L17.36|
;;;199    		}
;;;200    	}
;;;201    }
000024  e8bd81f0          POP      {r4-r8,pc}
;;;202    
                          ENDP


                          AREA ||area_number.18||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.18||, ||.text||
                  FIO_HalfWordSetDir PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  461f              MOV      r7,r3
00000c  4640              MOV      r0,r8
00000e  f7fffffe          BL       FIO_HalfWordGetPointer
;;;187    
;;;188    	if (pGPIO != NULL)
000012  4604              MOV      r4,r0
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b18c              CBZ      r4,|L18.58|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  b147              CBZ      r7,|L18.42|
000018  b11e              CBZ      r6,|L18.34|
00001a  8860              LDRH     r0,[r4,#2]
00001c  4328              ORRS     r0,r0,r5
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  8060              STRH     r0,[r4,#2]
000020  e00b              B        |L18.58|
                  |L18.34|
000022  8820              LDRH     r0,[r4,#0]
;;;199    		}
;;;200    	}
;;;201    }
000024  4328              ORRS     r0,r0,r5
000026  8020              STRH     r0,[r4,#0]
000028  e007              B        |L18.58|
                  |L18.42|
00002a  b11e              CBZ      r6,|L18.52|
00002c  8860              LDRH     r0,[r4,#2]
00002e  43a8              BICS     r0,r0,r5
000030  8060              STRH     r0,[r4,#2]
000032  e002              B        |L18.58|
                  |L18.52|
000034  8820              LDRH     r0,[r4,#0]
000036  43a8              BICS     r0,r0,r5
000038  8020              STRH     r0,[r4,#0]
                  |L18.58|
00003a  e8bd81f0          POP      {r4-r8,pc}
;;;202    
                          ENDP


                          AREA ||area_number.19||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.19||, ||.text||
                  FIO_HalfWordSetMask PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4680              MOV      r8,r0
000006  460e              MOV      r6,r1
000008  4615              MOV      r5,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  461f              MOV      r7,r3
00000c  4640              MOV      r0,r8
00000e  f7fffffe          BL       FIO_HalfWordGetPointer
;;;187    
;;;188    	if (pGPIO != NULL)
000012  4604              MOV      r4,r0
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b18c              CBZ      r4,|L19.58|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  b147              CBZ      r7,|L19.42|
000018  b11e              CBZ      r6,|L19.34|
00001a  8a60              LDRH     r0,[r4,#0x12]
00001c  4328              ORRS     r0,r0,r5
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  8260              STRH     r0,[r4,#0x12]
000020  e00b              B        |L19.58|
                  |L19.34|
000022  8a20              LDRH     r0,[r4,#0x10]
;;;199    		}
;;;200    	}
;;;201    }
000024  4328              ORRS     r0,r0,r5
000026  8220              STRH     r0,[r4,#0x10]
000028  e007              B        |L19.58|
                  |L19.42|
00002a  b11e              CBZ      r6,|L19.52|
00002c  8a60              LDRH     r0,[r4,#0x12]
00002e  43a8              BICS     r0,r0,r5
000030  8260              STRH     r0,[r4,#0x12]
000032  e002              B        |L19.58|
                  |L19.52|
000034  8a20              LDRH     r0,[r4,#0x10]
000036  43a8              BICS     r0,r0,r5
000038  8220              STRH     r0,[r4,#0x10]
                  |L19.58|
00003a  e8bd81f0          POP      {r4-r8,pc}
;;;202    
                          ENDP


                          AREA ||area_number.20||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.20||, ||.text||
                  FIO_HalfWordSetValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       FIO_HalfWordGetPointer
000010  4605              MOV      r5,r0
;;;187    
;;;188    	if (pGPIO != NULL)
000012  b11d              CBZ      r5,|L20.28|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b10e              CBZ      r6,|L20.26|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  836c              STRH     r4,[r5,#0x1a]
000018  e000              B        |L20.28|
                  |L20.26|
00001a  832c              STRH     r4,[r5,#0x18]
                  |L20.28|
00001c  e8bd81f0          POP      {r4-r8,pc}
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.21||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.21||, ||.text||
                  FIO_HalfWordClearValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       FIO_HalfWordGetPointer
000010  4605              MOV      r5,r0
;;;187    
;;;188    	if (pGPIO != NULL)
000012  b11d              CBZ      r5,|L21.28|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b10e              CBZ      r6,|L21.26|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  83ec              STRH     r4,[r5,#0x1e]
000018  e000              B        |L21.28|
                  |L21.26|
00001a  83ac              STRH     r4,[r5,#0x1c]
                  |L21.28|
00001c  e8bd81f0          POP      {r4-r8,pc}
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.22||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.22||, ||.text||
                  FIO_HalfWordReadValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       FIO_HalfWordGetPointer
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000c  4604              MOV      r4,r0
00000e  b124              CBZ      r4,|L22.26|
000010  b10d              CBZ      r5,|L22.22|
;;;187    
;;;188    	if (pGPIO != NULL)
000012  8ae0              LDRH     r0,[r4,#0x16]
                  |L22.20|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  bd70              POP      {r4-r6,pc}
                  |L22.22|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  8aa0              LDRH     r0,[r4,#0x14]
000018  e7fc              B        |L22.20|
                  |L22.26|
00001a  2000              MOVS     r0,#0
00001c  e7fa              B        |L22.20|
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.23||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.23||, ||.text||
                  FIO_ByteSetDir PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  461f              MOV      r7,r3
00000c  4640              MOV      r0,r8
00000e  f7fffffe          BL       FIO_ByteGetPointer
;;;187    
;;;188    	if (pGPIO != NULL)
000012  4605              MOV      r5,r0
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b17d              CBZ      r5,|L23.54|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  b13f              CBZ      r7,|L23.40|
000018  2c00              CMP      r4,#0
00001a  db0c              BLT      |L23.54|
00001c  2c03              CMP      r4,#3
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  dc0a              BGT      |L23.54|
000020  5d28              LDRB     r0,[r5,r4]
000022  4330              ORRS     r0,r0,r6
;;;199    		}
;;;200    	}
;;;201    }
000024  5528              STRB     r0,[r5,r4]
000026  e006              B        |L23.54|
                  |L23.40|
000028  2c00              CMP      r4,#0
00002a  db04              BLT      |L23.54|
00002c  2c03              CMP      r4,#3
00002e  dc02              BGT      |L23.54|
000030  5d28              LDRB     r0,[r5,r4]
000032  43b0              BICS     r0,r0,r6
000034  5528              STRB     r0,[r5,r4]
                  |L23.54|
000036  e8bd81f0          POP      {r4-r8,pc}
;;;202    
                          ENDP


                          AREA ||area_number.24||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.24||, ||.text||
                  FIO_ByteSetMask PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  461f              MOV      r7,r3
00000c  4640              MOV      r0,r8
00000e  f7fffffe          BL       FIO_ByteGetPointer
;;;187    
;;;188    	if (pGPIO != NULL)
000012  4605              MOV      r5,r0
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  b1bd              CBZ      r5,|L24.70|
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  b15f              CBZ      r7,|L24.48|
000018  2c00              CMP      r4,#0
00001a  db14              BLT      |L24.70|
00001c  2c03              CMP      r4,#3
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  dc12              BGT      |L24.70|
000020  f1050010          ADD      r0,r5,#0x10
;;;199    		}
;;;200    	}
;;;201    }
000024  5d00              LDRB     r0,[r0,r4]
000026  4330              ORRS     r0,r0,r6
000028  f1050110          ADD      r1,r5,#0x10
00002c  5508              STRB     r0,[r1,r4]
00002e  e00a              B        |L24.70|
                  |L24.48|
000030  2c00              CMP      r4,#0
000032  db08              BLT      |L24.70|
000034  2c03              CMP      r4,#3
000036  dc06              BGT      |L24.70|
000038  f1050010          ADD      r0,r5,#0x10
00003c  5d00              LDRB     r0,[r0,r4]
00003e  43b0              BICS     r0,r0,r6
000040  f1050110          ADD      r1,r5,#0x10
000044  5508              STRB     r0,[r1,r4]
                  |L24.70|
000046  e8bd81f0          POP      {r4-r8,pc}
;;;202    
                          ENDP


                          AREA ||area_number.25||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.25||, ||.text||
                  FIO_ByteSetValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       FIO_ByteGetPointer
000010  4606              MOV      r6,r0
;;;187    
;;;188    	if (pGPIO != NULL)
000012  b136              CBZ      r6,|L25.34|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  2c00              CMP      r4,#0
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  db04              BLT      |L25.34|
000018  2c03              CMP      r4,#3
00001a  dc02              BGT      |L25.34|
00001c  f1060018          ADD      r0,r6,#0x18
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
000020  5505              STRB     r5,[r0,r4]
                  |L25.34|
000022  e8bd81f0          POP      {r4-r8,pc}
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.26||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.26||, ||.text||
                  FIO_ByteClearValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;185    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000a  4638              MOV      r0,r7
00000c  f7fffffe          BL       FIO_ByteGetPointer
000010  4606              MOV      r6,r0
;;;187    
;;;188    	if (pGPIO != NULL)
000012  b136              CBZ      r6,|L26.34|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  2c00              CMP      r4,#0
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  db04              BLT      |L26.34|
000018  2c03              CMP      r4,#3
00001a  dc02              BGT      |L26.34|
00001c  f106001c          ADD      r0,r6,#0x1c
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
000020  5505              STRB     r5,[r0,r4]
                  |L26.34|
000022  e8bd81f0          POP      {r4-r8,pc}
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


                          AREA ||area_number.27||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.27||, ||.text||
                  FIO_ByteReadValue PROC
;;;183     **********************************************************************/
;;;184    void GPIO_SetDir(uint8_t portNum, uint32_t bitValue, uint8_t dir)
000000  b570              PUSH     {r4-r6,lr}
;;;185    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       FIO_ByteGetPointer
;;;186    	LPC_GPIO_TypeDef *pGPIO = GPIO_GetPointer(portNum);
00000c  4605              MOV      r5,r0
00000e  b13d              CBZ      r5,|L27.32|
000010  2c00              CMP      r4,#0
;;;187    
;;;188    	if (pGPIO != NULL)
000012  db05              BLT      |L27.32|
;;;189    	{
;;;190    		// Enable Output
;;;191    		if (dir)
000014  2c03              CMP      r4,#3
;;;192    		{
;;;193    			pGPIO->DIR |= bitValue;
000016  dc03              BGT      |L27.32|
000018  f1050014          ADD      r0,r5,#0x14
00001c  5d00              LDRB     r0,[r0,r4]
                  |L27.30|
;;;194    		}
;;;195    		// Enable Input
;;;196    		else
;;;197    		{
;;;198    			pGPIO->DIR &= ~bitValue;
00001e  bd70              POP      {r4-r6,pc}
                  |L27.32|
000020  2000              MOVS     r0,#0
000022  e7fc              B        |L27.30|
;;;199    		}
;;;200    	}
;;;201    }
;;;202    
                          ENDP


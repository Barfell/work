; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\system_lpc177x_8x.o --asm_dir=.\ --list_dir=.\ --depend=.\flash\system_lpc177x_8x.d --feedback=.\Flash\YL_LPC1788_Test.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\CM3_lib -I..\Drivers -I..\Startup -I.\Easy_web -I.\Lcd_Drv -I.\IIC_Test -I.\USU_Host -I.\Nand_Test -I.\FATFS_R0.08 -I..\fs -I"D:\Program Files\mdk\ARM\RV31\INC" -I"D:\Program Files\mdk\pack\ARM\CMSIS\4.1.1\CMSIS\Include" -I"D:\Program Files\mdk\ARM\Inc\NXP\LPC177x_8x" -D__MICROLIB --omf_browse=.\flash\system_lpc177x_8x.crf ..\Startup\system_LPC177x_8x.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;329     *----------------------------------------------------------------------------*/
;;;330    void SystemCoreClockUpdate (void)            /* Get Core Clock Frequency      */
000000  48a7              LDR      r0,|L1.672|
;;;331    {
;;;332      /* Determine clock frequency according to clock register values             */
;;;333      if ((LPC_SC->CCLKSEL &0x100) == 0) {            /* cclk = sysclk    */
000002  6800              LDR      r0,[r0,#0]
000004  f4007080          AND      r0,r0,#0x100
000008  2800              CMP      r0,#0
00000a  d151              BNE      |L1.176|
;;;334        if ((LPC_SC->CLKSRCSEL & 0x01) == 0) {    /* sysclk = irc_clk */
00000c  48a4              LDR      r0,|L1.672|
00000e  3008              ADDS     r0,r0,#8
000010  6800              LDR      r0,[r0,#0]
000012  f0000001          AND      r0,r0,#1
000016  b9f0              CBNZ     r0,|L1.86|
;;;335              SystemCoreClock = (IRC_OSC / (LPC_SC->CCLKSEL & 0x1F));
000018  48a1              LDR      r0,|L1.672|
00001a  6800              LDR      r0,[r0,#0]
00001c  f000001f          AND      r0,r0,#0x1f
000020  49a0              LDR      r1,|L1.676|
000022  fbb1f0f0          UDIV     r0,r1,r0
000026  49a0              LDR      r1,|L1.680|
000028  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;336              PeripheralClock = (IRC_OSC / (LPC_SC->PCLKSEL & 0x1F));
00002a  48a0              LDR      r0,|L1.684|
00002c  f8d001a8          LDR      r0,[r0,#0x1a8]
000030  f000001f          AND      r0,r0,#0x1f
000034  499b              LDR      r1,|L1.676|
000036  fbb1f0f0          UDIV     r0,r1,r0
00003a  499d              LDR      r1,|L1.688|
00003c  6008              STR      r0,[r1,#0]  ; PeripheralClock
;;;337              EMCClock        = (IRC_OSC / ((LPC_SC->EMCCLKSEL & 0x01)+1));
00003e  4898              LDR      r0,|L1.672|
000040  1f00              SUBS     r0,r0,#4
000042  6800              LDR      r0,[r0,#0]
000044  f0000001          AND      r0,r0,#1
000048  1c40              ADDS     r0,r0,#1
00004a  4996              LDR      r1,|L1.676|
00004c  fbb1f0f0          UDIV     r0,r1,r0
000050  4998              LDR      r1,|L1.692|
000052  6008              STR      r0,[r1,#0]  ; EMCClock
000054  e0b8              B        |L1.456|
                  |L1.86|
;;;338        }
;;;339        else {                                        /* sysclk = osc_clk */
;;;340          if ((LPC_SC->SCS & 0x40) == 0) {
000056  4892              LDR      r0,|L1.672|
000058  309c              ADDS     r0,r0,#0x9c
00005a  6800              LDR      r0,[r0,#0]
00005c  f0000040          AND      r0,r0,#0x40
000060  b938              CBNZ     r0,|L1.114|
;;;341              SystemCoreClock = 0;                      /* this should never happen! */
000062  2000              MOVS     r0,#0
000064  4990              LDR      r1,|L1.680|
000066  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;342              PeripheralClock = 0;
000068  4991              LDR      r1,|L1.688|
00006a  6008              STR      r0,[r1,#0]  ; PeripheralClock
;;;343              EMCClock        = 0;
00006c  4991              LDR      r1,|L1.692|
00006e  6008              STR      r0,[r1,#0]  ; EMCClock
000070  e0aa              B        |L1.456|
                  |L1.114|
;;;344          }
;;;345          else {
;;;346              SystemCoreClock = (OSC_CLK / (LPC_SC->CCLKSEL & 0x1F));
000072  488b              LDR      r0,|L1.672|
000074  6800              LDR      r0,[r0,#0]
000076  f000001f          AND      r0,r0,#0x1f
00007a  498a              LDR      r1,|L1.676|
00007c  fbb1f0f0          UDIV     r0,r1,r0
000080  4989              LDR      r1,|L1.680|
000082  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;347              PeripheralClock = (OSC_CLK / (LPC_SC->PCLKSEL & 0x1F));
000084  4889              LDR      r0,|L1.684|
000086  f8d001a8          LDR      r0,[r0,#0x1a8]
00008a  f000001f          AND      r0,r0,#0x1f
00008e  4985              LDR      r1,|L1.676|
000090  fbb1f0f0          UDIV     r0,r1,r0
000094  4986              LDR      r1,|L1.688|
000096  6008              STR      r0,[r1,#0]  ; PeripheralClock
;;;348              EMCClock        = (OSC_CLK / ((LPC_SC->EMCCLKSEL & 0x01)+1));
000098  4881              LDR      r0,|L1.672|
00009a  1f00              SUBS     r0,r0,#4
00009c  6800              LDR      r0,[r0,#0]
00009e  f0000001          AND      r0,r0,#1
0000a2  1c40              ADDS     r0,r0,#1
0000a4  497f              LDR      r1,|L1.676|
0000a6  fbb1f0f0          UDIV     r0,r1,r0
0000aa  4982              LDR      r1,|L1.692|
0000ac  6008              STR      r0,[r1,#0]  ; EMCClock
0000ae  e08b              B        |L1.456|
                  |L1.176|
;;;349          }
;;;350        }
;;;351      }
;;;352      else {                                          /* cclk = pll_clk */
;;;353        if ((LPC_SC->PLL0STAT & 0x100) == 0) {        /* PLL0 not enabled */
0000b0  487b              LDR      r0,|L1.672|
0000b2  387c              SUBS     r0,r0,#0x7c
0000b4  6800              LDR      r0,[r0,#0]
0000b6  f4007080          AND      r0,r0,#0x100
0000ba  b938              CBNZ     r0,|L1.204|
;;;354              SystemCoreClock = 0;                      /* this should never happen! */
0000bc  2000              MOVS     r0,#0
0000be  497a              LDR      r1,|L1.680|
0000c0  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;355              PeripheralClock = 0;
0000c2  497b              LDR      r1,|L1.688|
0000c4  6008              STR      r0,[r1,#0]  ; PeripheralClock
;;;356              EMCClock 		  = 0;
0000c6  497b              LDR      r1,|L1.692|
0000c8  6008              STR      r0,[r1,#0]  ; EMCClock
0000ca  e07d              B        |L1.456|
                  |L1.204|
;;;357        }
;;;358        else {
;;;359          if ((LPC_SC->CLKSRCSEL & 0x01) == 0) {    /* sysclk = irc_clk */
0000cc  4874              LDR      r0,|L1.672|
0000ce  3008              ADDS     r0,r0,#8
0000d0  6800              LDR      r0,[r0,#0]
0000d2  f0000001          AND      r0,r0,#1
0000d6  bba0              CBNZ     r0,|L1.322|
;;;360              SystemCoreClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->CCLKSEL & 0x1F));
0000d8  4871              LDR      r0,|L1.672|
0000da  387c              SUBS     r0,r0,#0x7c
0000dc  6800              LDR      r0,[r0,#0]
0000de  f000001f          AND      r0,r0,#0x1f
0000e2  1c40              ADDS     r0,r0,#1
0000e4  496f              LDR      r1,|L1.676|
0000e6  4348              MULS     r0,r1,r0
0000e8  4970              LDR      r1,|L1.684|
0000ea  f8d11104          LDR      r1,[r1,#0x104]
0000ee  f001011f          AND      r1,r1,#0x1f
0000f2  fbb0f0f1          UDIV     r0,r0,r1
0000f6  496c              LDR      r1,|L1.680|
0000f8  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;361              PeripheralClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->PCLKSEL & 0x1F));
0000fa  4869              LDR      r0,|L1.672|
0000fc  387c              SUBS     r0,r0,#0x7c
0000fe  6800              LDR      r0,[r0,#0]
000100  f000001f          AND      r0,r0,#0x1f
000104  1c40              ADDS     r0,r0,#1
000106  4967              LDR      r1,|L1.676|
000108  4348              MULS     r0,r1,r0
00010a  4965              LDR      r1,|L1.672|
00010c  31a4              ADDS     r1,r1,#0xa4
00010e  6809              LDR      r1,[r1,#0]
000110  f001011f          AND      r1,r1,#0x1f
000114  fbb0f0f1          UDIV     r0,r0,r1
000118  4965              LDR      r1,|L1.688|
00011a  6008              STR      r0,[r1,#0]  ; PeripheralClock
;;;362              EMCClock        = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / ((LPC_SC->EMCCLKSEL & 0x01)+1));
00011c  4860              LDR      r0,|L1.672|
00011e  387c              SUBS     r0,r0,#0x7c
000120  6800              LDR      r0,[r0,#0]
000122  f000001f          AND      r0,r0,#0x1f
000126  1c40              ADDS     r0,r0,#1
000128  495e              LDR      r1,|L1.676|
00012a  4348              MULS     r0,r1,r0
00012c  495f              LDR      r1,|L1.684|
00012e  f8d11100          LDR      r1,[r1,#0x100]
000132  f0010101          AND      r1,r1,#1
000136  1c49              ADDS     r1,r1,#1
000138  fbb0f0f1          UDIV     r0,r0,r1
00013c  495d              LDR      r1,|L1.692|
00013e  6008              STR      r0,[r1,#0]  ; EMCClock
000140  e042              B        |L1.456|
                  |L1.322|
000142  e7ff              B        |L1.324|
                  |L1.324|
;;;363          }
;;;364          else {                                        /* sysclk = osc_clk */
;;;365            if ((LPC_SC->SCS & 0x40) == 0) {
000144  4856              LDR      r0,|L1.672|
000146  309c              ADDS     r0,r0,#0x9c
000148  6800              LDR      r0,[r0,#0]
00014a  f0000040          AND      r0,r0,#0x40
00014e  b938              CBNZ     r0,|L1.352|
;;;366              SystemCoreClock = 0;                      /* this should never happen! */
000150  2000              MOVS     r0,#0
000152  4955              LDR      r1,|L1.680|
000154  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;367              PeripheralClock = 0;
000156  4956              LDR      r1,|L1.688|
000158  6008              STR      r0,[r1,#0]  ; PeripheralClock
;;;368              EMCClock 		  = 0;
00015a  4956              LDR      r1,|L1.692|
00015c  6008              STR      r0,[r1,#0]  ; EMCClock
00015e  e033              B        |L1.456|
                  |L1.352|
;;;369            }
;;;370            else {
;;;371              SystemCoreClock = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->CCLKSEL & 0x1F));
000160  484f              LDR      r0,|L1.672|
000162  387c              SUBS     r0,r0,#0x7c
000164  6800              LDR      r0,[r0,#0]
000166  f000001f          AND      r0,r0,#0x1f
00016a  1c40              ADDS     r0,r0,#1
00016c  494d              LDR      r1,|L1.676|
00016e  4348              MULS     r0,r1,r0
000170  494e              LDR      r1,|L1.684|
000172  f8d11104          LDR      r1,[r1,#0x104]
000176  f001011f          AND      r1,r1,#0x1f
00017a  fbb0f0f1          UDIV     r0,r0,r1
00017e  494a              LDR      r1,|L1.680|
000180  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;372              PeripheralClock = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->PCLKSEL & 0x1F));
000182  4847              LDR      r0,|L1.672|
000184  387c              SUBS     r0,r0,#0x7c
000186  6800              LDR      r0,[r0,#0]
000188  f000001f          AND      r0,r0,#0x1f
00018c  1c40              ADDS     r0,r0,#1
00018e  4945              LDR      r1,|L1.676|
000190  4348              MULS     r0,r1,r0
000192  4943              LDR      r1,|L1.672|
000194  31a4              ADDS     r1,r1,#0xa4
000196  6809              LDR      r1,[r1,#0]
000198  f001011f          AND      r1,r1,#0x1f
00019c  fbb0f0f1          UDIV     r0,r0,r1
0001a0  4943              LDR      r1,|L1.688|
0001a2  6008              STR      r0,[r1,#0]  ; PeripheralClock
;;;373              EMCClock        = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / ((LPC_SC->EMCCLKSEL & 0x01)+1));
0001a4  483e              LDR      r0,|L1.672|
0001a6  387c              SUBS     r0,r0,#0x7c
0001a8  6800              LDR      r0,[r0,#0]
0001aa  f000001f          AND      r0,r0,#0x1f
0001ae  1c40              ADDS     r0,r0,#1
0001b0  493c              LDR      r1,|L1.676|
0001b2  4348              MULS     r0,r1,r0
0001b4  493d              LDR      r1,|L1.684|
0001b6  f8d11100          LDR      r1,[r1,#0x100]
0001ba  f0010101          AND      r1,r1,#1
0001be  1c49              ADDS     r1,r1,#1
0001c0  fbb0f0f1          UDIV     r0,r0,r1
0001c4  493b              LDR      r1,|L1.692|
0001c6  6008              STR      r0,[r1,#0]  ; EMCClock
                  |L1.456|
;;;374            }
;;;375          }
;;;376        }
;;;377      }
;;;378      /* ---update USBClock------------------*/
;;;379      if(LPC_SC->USBCLKSEL & (0x01<<8))//Use PLL0 as the input to the USB clock divider
0001c8  4835              LDR      r0,|L1.672|
0001ca  1d00              ADDS     r0,r0,#4
0001cc  6800              LDR      r0,[r0,#0]
0001ce  f4007080          AND      r0,r0,#0x100
0001d2  b3c8              CBZ      r0,|L1.584|
;;;380      {
;;;381    	  switch (LPC_SC->USBCLKSEL & 0x1F)
0001d4  4832              LDR      r0,|L1.672|
0001d6  1d00              ADDS     r0,r0,#4
0001d8  6800              LDR      r0,[r0,#0]
0001da  f000001f          AND      r0,r0,#0x1f
0001de  b120              CBZ      r0,|L1.490|
0001e0  2804              CMP      r0,#4
0001e2  d006              BEQ      |L1.498|
0001e4  2806              CMP      r0,#6
0001e6  d130              BNE      |L1.586|
0001e8  e004              B        |L1.500|
                  |L1.490|
;;;382    	  {
;;;383    	  case 0:
;;;384    		  USBClock = 0; //no clock will be provided to the USB subsystem
0001ea  2000              MOVS     r0,#0
0001ec  4932              LDR      r1,|L1.696|
0001ee  6008              STR      r0,[r1,#0]  ; USBClock
;;;385    		  break;
0001f0  e02f              B        |L1.594|
                  |L1.498|
;;;386    	  case 4:
;;;387    	  case 6:
0001f2  bf00              NOP      
                  |L1.500|
;;;388    		  if(LPC_SC->CLKSRCSEL & 0x01)	//pll_clk_in = main_osc
0001f4  482a              LDR      r0,|L1.672|
0001f6  3008              ADDS     r0,r0,#8
0001f8  6800              LDR      r0,[r0,#0]
0001fa  f0000001          AND      r0,r0,#1
0001fe  b188              CBZ      r0,|L1.548|
;;;389    			  USBClock = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->USBCLKSEL & 0x1F));
000200  4827              LDR      r0,|L1.672|
000202  387c              SUBS     r0,r0,#0x7c
000204  6800              LDR      r0,[r0,#0]
000206  f000001f          AND      r0,r0,#0x1f
00020a  1c40              ADDS     r0,r0,#1
00020c  4925              LDR      r1,|L1.676|
00020e  4348              MULS     r0,r1,r0
000210  4926              LDR      r1,|L1.684|
000212  f8d11108          LDR      r1,[r1,#0x108]
000216  f001011f          AND      r1,r1,#0x1f
00021a  fbb0f0f1          UDIV     r0,r0,r1
00021e  4926              LDR      r1,|L1.696|
000220  6008              STR      r0,[r1,#0]  ; USBClock
000222  e010              B        |L1.582|
                  |L1.548|
;;;390    		  else //pll_clk_in = irc_clk
;;;391    			  USBClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->USBCLKSEL & 0x1F));
000224  481e              LDR      r0,|L1.672|
000226  387c              SUBS     r0,r0,#0x7c
000228  6800              LDR      r0,[r0,#0]
00022a  f000001f          AND      r0,r0,#0x1f
00022e  1c40              ADDS     r0,r0,#1
000230  491c              LDR      r1,|L1.676|
000232  4348              MULS     r0,r1,r0
000234  491d              LDR      r1,|L1.684|
000236  f8d11108          LDR      r1,[r1,#0x108]
00023a  f001011f          AND      r1,r1,#0x1f
00023e  fbb0f0f1          UDIV     r0,r0,r1
000242  491d              LDR      r1,|L1.696|
000244  6008              STR      r0,[r1,#0]  ; USBClock
                  |L1.582|
;;;392    		  break;
000246  e004              B        |L1.594|
                  |L1.584|
000248  e004              B        |L1.596|
                  |L1.586|
;;;393    	  default:
;;;394    		  USBClock = 0;  /* this should never happen! */
00024a  2000              MOVS     r0,#0
00024c  491a              LDR      r1,|L1.696|
00024e  6008              STR      r0,[r1,#0]  ; USBClock
000250  bf00              NOP                            ;381
                  |L1.594|
000252  e024              B        |L1.670|
                  |L1.596|
;;;395    	  }
;;;396      }
;;;397      else if(LPC_SC->USBCLKSEL & (0x02<<8))//usb_input_clk = alt_pll (pll1)
000254  4812              LDR      r0,|L1.672|
000256  1d00              ADDS     r0,r0,#4
000258  6800              LDR      r0,[r0,#0]
00025a  f4007000          AND      r0,r0,#0x200
00025e  b1d8              CBZ      r0,|L1.664|
;;;398      {
;;;399    	  if(LPC_SC->CLKSRCSEL & 0x01)	//pll1_clk_in = main_osc
000260  480f              LDR      r0,|L1.672|
000262  3008              ADDS     r0,r0,#8
000264  6800              LDR      r0,[r0,#0]
000266  f0000001          AND      r0,r0,#1
00026a  b150              CBZ      r0,|L1.642|
;;;400    	  		USBClock = (OSC_CLK * ((LPC_SC->PLL1STAT & 0x1F) + 1));
00026c  480c              LDR      r0,|L1.672|
00026e  385c              SUBS     r0,r0,#0x5c
000270  6800              LDR      r0,[r0,#0]
000272  f000001f          AND      r0,r0,#0x1f
000276  1c40              ADDS     r0,r0,#1
000278  490a              LDR      r1,|L1.676|
00027a  4348              MULS     r0,r1,r0
00027c  490e              LDR      r1,|L1.696|
00027e  6008              STR      r0,[r1,#0]  ; USBClock
000280  e00d              B        |L1.670|
                  |L1.642|
;;;401    	  else //pll1_clk_in = irc_clk
;;;402    	  		USBClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1));
000282  4807              LDR      r0,|L1.672|
000284  387c              SUBS     r0,r0,#0x7c
000286  6800              LDR      r0,[r0,#0]
000288  f000001f          AND      r0,r0,#0x1f
00028c  1c40              ADDS     r0,r0,#1
00028e  4905              LDR      r1,|L1.676|
000290  4348              MULS     r0,r1,r0
000292  4909              LDR      r1,|L1.696|
000294  6008              STR      r0,[r1,#0]  ; USBClock
000296  e002              B        |L1.670|
                  |L1.664|
;;;403      }
;;;404      else
;;;405    	  USBClock = 0; /* this should never happen! */
000298  2000              MOVS     r0,#0
00029a  4907              LDR      r1,|L1.696|
00029c  6008              STR      r0,[r1,#0]  ; USBClock
                  |L1.670|
;;;406    
;;;407      /* ------update SPIFIClock ----------*/
;;;408      /*--- <tbd>------*/
;;;409    }
00029e  4770              BX       lr
;;;410    
                          ENDP

                  |L1.672|
                          DCD      0x400fc104
                  |L1.676|
                          DCD      0x00b71b00
                  |L1.680|
                          DCD      SystemCoreClock
                  |L1.684|
                          DCD      0x400fc000
                  |L1.688|
                          DCD      PeripheralClock
                  |L1.692|
                          DCD      EMCClock
                  |L1.696|
                          DCD      USBClock

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  SystemInit PROC
;;;329     *----------------------------------------------------------------------------*/
;;;330    void SystemCoreClockUpdate (void)            /* Get Core Clock Frequency      */
000000  2020              MOVS     r0,#0x20
;;;331    {
;;;332      /* Determine clock frequency according to clock register values             */
;;;333      if ((LPC_SC->CCLKSEL &0x100) == 0) {            /* cclk = sysclk    */
000002  492e              LDR      r1,|L2.188|
000004  6008              STR      r0,[r1,#0]
000006  bf00              NOP      
                  |L2.8|
000008  482c              LDR      r0,|L2.188|
00000a  6800              LDR      r0,[r0,#0]
;;;334        if ((LPC_SC->CLKSRCSEL & 0x01) == 0) {    /* sysclk = irc_clk */
00000c  f0000040          AND      r0,r0,#0x40
000010  2800              CMP      r0,#0
000012  d0f9              BEQ      |L2.8|
000014  2001              MOVS     r0,#1
000016  4929              LDR      r1,|L2.188|
;;;335              SystemCoreClock = (IRC_OSC / (LPC_SC->CCLKSEL & 0x1F));
000018  3994              SUBS     r1,r1,#0x94
00001a  6008              STR      r0,[r1,#0]
00001c  2009              MOVS     r0,#9
00001e  4928              LDR      r1,|L2.192|
000020  f8c10084          STR      r0,[r1,#0x84]
000024  2001              MOVS     r0,#1
000026  4926              LDR      r1,|L2.192|
000028  3180              ADDS     r1,r1,#0x80
;;;336              PeripheralClock = (IRC_OSC / (LPC_SC->PCLKSEL & 0x1F));
00002a  6008              STR      r0,[r1,#0]
00002c  20aa              MOVS     r0,#0xaa
00002e  4924              LDR      r1,|L2.192|
000030  318c              ADDS     r1,r1,#0x8c
000032  6008              STR      r0,[r1,#0]
000034  2055              MOVS     r0,#0x55
000036  6008              STR      r0,[r1,#0]
000038  bf00              NOP      
                  |L2.58|
00003a  4821              LDR      r0,|L2.192|
00003c  3088              ADDS     r0,r0,#0x88
;;;337              EMCClock        = (IRC_OSC / ((LPC_SC->EMCCLKSEL & 0x01)+1));
00003e  6800              LDR      r0,[r0,#0]
000040  f4006080          AND      r0,r0,#0x400
000044  2800              CMP      r0,#0
000046  d0f8              BEQ      |L2.58|
000048  2023              MOVS     r0,#0x23
00004a  491d              LDR      r1,|L2.192|
00004c  31a4              ADDS     r1,r1,#0xa4
00004e  6008              STR      r0,[r1,#0]
000050  2001              MOVS     r0,#1
000052  491b              LDR      r1,|L2.192|
000054  f8c100a0          STR      r0,[r1,#0xa0]
;;;338        }
;;;339        else {                                        /* sysclk = osc_clk */
;;;340          if ((LPC_SC->SCS & 0x40) == 0) {
000058  20aa              MOVS     r0,#0xaa
00005a  4919              LDR      r1,|L2.192|
00005c  31ac              ADDS     r1,r1,#0xac
00005e  6008              STR      r0,[r1,#0]
000060  2055              MOVS     r0,#0x55
;;;341              SystemCoreClock = 0;                      /* this should never happen! */
000062  4917              LDR      r1,|L2.192|
000064  f8c100ac          STR      r0,[r1,#0xac]
;;;342              PeripheralClock = 0;
000068  bf00              NOP      
                  |L2.106|
00006a  4815              LDR      r0,|L2.192|
;;;343              EMCClock        = 0;
00006c  30a8              ADDS     r0,r0,#0xa8
00006e  6800              LDR      r0,[r0,#0]
000070  f4006080          AND      r0,r0,#0x400
;;;344          }
;;;345          else {
;;;346              SystemCoreClock = (OSC_CLK / (LPC_SC->CCLKSEL & 0x1F));
000074  2800              CMP      r0,#0
000076  d0f8              BEQ      |L2.106|
000078  f2401001          MOV      r0,#0x101
00007c  490f              LDR      r1,|L2.188|
00007e  399c              SUBS     r1,r1,#0x9c
000080  6008              STR      r0,[r1,#0]
000082  f2402001          MOV      r0,#0x201
;;;347              PeripheralClock = (OSC_CLK / (LPC_SC->PCLKSEL & 0x1F));
000086  490e              LDR      r1,|L2.192|
000088  f8c10108          STR      r0,[r1,#0x108]
00008c  2001              MOVS     r0,#1
00008e  490b              LDR      r1,|L2.188|
000090  39a0              SUBS     r1,r1,#0xa0
000092  6008              STR      r0,[r1,#0]
000094  2002              MOVS     r0,#2
000096  4909              LDR      r1,|L2.188|
;;;348              EMCClock        = (OSC_CLK / ((LPC_SC->EMCCLKSEL & 0x01)+1));
000098  3108              ADDS     r1,r1,#8
00009a  6008              STR      r0,[r1,#0]
00009c  4809              LDR      r0,|L2.196|
00009e  4908              LDR      r1,|L2.192|
0000a0  31c4              ADDS     r1,r1,#0xc4
0000a2  6008              STR      r0,[r1,#0]
0000a4  1588              ASRS     r0,r1,#22
0000a6  4905              LDR      r1,|L2.188|
0000a8  3128              ADDS     r1,r1,#0x28
0000aa  6008              STR      r0,[r1,#0]
0000ac  f245003a          MOV      r0,#0x503a
;;;349          }
;;;350        }
;;;351      }
;;;352      else {                                          /* cclk = pll_clk */
;;;353        if ((LPC_SC->PLL0STAT & 0x100) == 0) {        /* PLL0 not enabled */
0000b0  4903              LDR      r1,|L2.192|
0000b2  6008              STR      r0,[r1,#0]
0000b4  2000              MOVS     r0,#0
0000b6  4904              LDR      r1,|L2.200|
0000b8  6008              STR      r0,[r1,#0]
0000ba  4770              BX       lr
;;;354              SystemCoreClock = 0;                      /* this should never happen! */
;;;355              PeripheralClock = 0;
;;;356              EMCClock 		  = 0;
;;;357        }
;;;358        else {
;;;359          if ((LPC_SC->CLKSRCSEL & 0x01) == 0) {    /* sysclk = irc_clk */
;;;360              SystemCoreClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->CCLKSEL & 0x1F));
;;;361              PeripheralClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->PCLKSEL & 0x1F));
;;;362              EMCClock        = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / ((LPC_SC->EMCCLKSEL & 0x01)+1));
;;;363          }
;;;364          else {                                        /* sysclk = osc_clk */
;;;365            if ((LPC_SC->SCS & 0x40) == 0) {
;;;366              SystemCoreClock = 0;                      /* this should never happen! */
;;;367              PeripheralClock = 0;
;;;368              EMCClock 		  = 0;
;;;369            }
;;;370            else {
;;;371              SystemCoreClock = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->CCLKSEL & 0x1F));
;;;372              PeripheralClock = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->PCLKSEL & 0x1F));
;;;373              EMCClock        = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / ((LPC_SC->EMCCLKSEL & 0x01)+1));
;;;374            }
;;;375          }
;;;376        }
;;;377      }
;;;378      /* ---update USBClock------------------*/
;;;379      if(LPC_SC->USBCLKSEL & (0x01<<8))//Use PLL0 as the input to the USB clock divider
;;;380      {
;;;381    	  switch (LPC_SC->USBCLKSEL & 0x1F)
;;;382    	  {
;;;383    	  case 0:
;;;384    		  USBClock = 0; //no clock will be provided to the USB subsystem
;;;385    		  break;
;;;386    	  case 4:
;;;387    	  case 6:
;;;388    		  if(LPC_SC->CLKSRCSEL & 0x01)	//pll_clk_in = main_osc
;;;389    			  USBClock = (OSC_CLK * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->USBCLKSEL & 0x1F));
;;;390    		  else //pll_clk_in = irc_clk
;;;391    			  USBClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1) / (LPC_SC->USBCLKSEL & 0x1F));
;;;392    		  break;
;;;393    	  default:
;;;394    		  USBClock = 0;  /* this should never happen! */
;;;395    	  }
;;;396      }
;;;397      else if(LPC_SC->USBCLKSEL & (0x02<<8))//usb_input_clk = alt_pll (pll1)
;;;398      {
;;;399    	  if(LPC_SC->CLKSRCSEL & 0x01)	//pll1_clk_in = main_osc
;;;400    	  		USBClock = (OSC_CLK * ((LPC_SC->PLL1STAT & 0x1F) + 1));
;;;401    	  else //pll1_clk_in = irc_clk
;;;402    	  		USBClock = (IRC_OSC * ((LPC_SC->PLL0STAT & 0x1F) + 1));
;;;403      }
;;;404      else
;;;405    	  USBClock = 0; /* this should never happen! */
;;;406    
;;;407      /* ------update SPIFIClock ----------*/
;;;408      /*--- <tbd>------*/
;;;409    }
;;;410    
                          ENDP

                  |L2.188|
                          DCD      0x400fc1a0
                  |L2.192|
                          DCD      0x400fc000
                  |L2.196|
                          DCD      0x042887de
                  |L2.200|
                          DCD      0xe000ed08

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x07270e00
                  PeripheralClock
                          DCD      0x03938700
                  EMCClock
                          DCD      0x03938700
                  USBClock
                          DCD      0x02dc6c00
                  SPIFIClock
                          DCD      0x00000000

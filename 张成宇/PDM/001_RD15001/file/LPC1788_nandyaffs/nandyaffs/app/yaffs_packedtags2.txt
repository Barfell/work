; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\yaffs_packedtags2.o --asm_dir=.\ --list_dir=.\ --depend=.\flash\yaffs_packedtags2.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\CM3_lib -I..\Drivers -I..\Startup -I.\Easy_web -I.\Lcd_Drv -I.\IIC_Test -I.\USU_Host -I.\Nand_Test -I.\FATFS_R0.08 -I..\fs -I"D:\Program Files\mdk\ARM\RV31\INC" -I"D:\Program Files\mdk\pack\ARM\CMSIS\4.1.1\CMSIS\Include" -I"D:\Program Files\mdk\ARM\Inc\NXP\LPC177x_8x" -D__MICROLIB --omf_browse=.\flash\yaffs_packedtags2.crf ..\fs\yaffs_packedtags2.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  yaffs_DumpPackedTags2TagsPart PROC
;;;40     
;;;41     static void yaffs_DumpPackedTags2TagsPart(const yaffs_PackedTags2TagsPart * ptt)
000000  bf00              NOP      
;;;42     {
;;;43     	T(YAFFS_TRACE_MTD,
000002  bf00              NOP      
;;;44     	  (TSTR("packed tags obj %d chunk %d byte %d seq %d" TENDSTR),
;;;45     	   ptt->objectId, ptt->chunkId, ptt->byteCount,
;;;46     	   ptt->sequenceNumber));
;;;47     }
000004  4770              BX       lr
;;;48     static void yaffs_DumpPackedTags2(const yaffs_PackedTags2 * pt)
                          ENDP

                  yaffs_DumpPackedTags2 PROC
000006  b510              PUSH     {r4,lr}
;;;49     {
000008  4604              MOV      r4,r0
;;;50     	yaffs_DumpPackedTags2TagsPart(&pt->t);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       yaffs_DumpPackedTags2TagsPart
;;;51     }
000010  bd10              POP      {r4,pc}
;;;52     
                          ENDP

                  yaffs_DumpTags2 PROC
;;;53     static void yaffs_DumpTags2(const yaffs_ExtendedTags * t)
000012  bf00              NOP      
;;;54     {
;;;55     	T(YAFFS_TRACE_MTD,
000014  bf00              NOP      
;;;56     	  (TSTR
;;;57     	   ("ext.tags eccres %d blkbad %d chused %d obj %d chunk%d byte %d del %d ser %d seq %d"
;;;58     	    TENDSTR), t->eccResult, t->blockBad, t->chunkUsed, t->objectId,
;;;59     	   t->chunkId, t->byteCount, t->chunkDeleted, t->serialNumber,
;;;60     	   t->sequenceNumber));
;;;61     
;;;62     }
000016  4770              BX       lr
;;;63     
                          ENDP

                  yaffs_PackTags2TagsPart PROC
;;;64     void yaffs_PackTags2TagsPart(yaffs_PackedTags2TagsPart * ptt, const yaffs_ExtendedTags * t)
000018  b570              PUSH     {r4-r6,lr}
;;;65     {
00001a  4604              MOV      r4,r0
00001c  460d              MOV      r5,r1
;;;66     	ptt->chunkId = t->chunkId;
00001e  68e8              LDR      r0,[r5,#0xc]
000020  60a0              STR      r0,[r4,#8]
;;;67     	ptt->sequenceNumber = t->sequenceNumber;
000022  6a68              LDR      r0,[r5,#0x24]
000024  6020              STR      r0,[r4,#0]
;;;68     	ptt->byteCount = t->byteCount;
000026  6928              LDR      r0,[r5,#0x10]
000028  60e0              STR      r0,[r4,#0xc]
;;;69     	ptt->objectId = t->objectId;
00002a  68a8              LDR      r0,[r5,#8]
00002c  6060              STR      r0,[r4,#4]
;;;70     
;;;71     	if (t->chunkId == 0 && t->extraHeaderInfoAvailable) {
00002e  68e8              LDR      r0,[r5,#0xc]
000030  bb08              CBNZ     r0,|L1.118|
000032  6aa8              LDR      r0,[r5,#0x28]
000034  b1f8              CBZ      r0,|L1.118|
;;;72     		/* Store the extra header info instead */
;;;73     		/* We save the parent object in the chunkId */
;;;74     		ptt->chunkId = EXTRA_HEADER_INFO_FLAG
000036  6ae8              LDR      r0,[r5,#0x2c]
000038  f0404000          ORR      r0,r0,#0x80000000
00003c  60a0              STR      r0,[r4,#8]
;;;75     			| t->extraParentObjectId;
;;;76     		if (t->extraIsShrinkHeader) {
00003e  6b28              LDR      r0,[r5,#0x30]
000040  b118              CBZ      r0,|L1.74|
;;;77     			ptt->chunkId |= EXTRA_SHRINK_FLAG;
000042  68a0              LDR      r0,[r4,#8]
000044  f0404080          ORR      r0,r0,#0x40000000
000048  60a0              STR      r0,[r4,#8]
                  |L1.74|
;;;78     		}
;;;79     		if (t->extraShadows) {
00004a  6b68              LDR      r0,[r5,#0x34]
00004c  b118              CBZ      r0,|L1.86|
;;;80     			ptt->chunkId |= EXTRA_SHADOWS_FLAG;
00004e  68a0              LDR      r0,[r4,#8]
000050  f0405000          ORR      r0,r0,#0x20000000
000054  60a0              STR      r0,[r4,#8]
                  |L1.86|
;;;81     		}
;;;82     
;;;83     		ptt->objectId &= ~EXTRA_OBJECT_TYPE_MASK;
000056  6860              LDR      r0,[r4,#4]
000058  f0204070          BIC      r0,r0,#0xf0000000
00005c  6060              STR      r0,[r4,#4]
;;;84     		ptt->objectId |=
00005e  f8951038          LDRB     r1,[r5,#0x38]
000062  6860              LDR      r0,[r4,#4]
000064  ea407001          ORR      r0,r0,r1,LSL #28
000068  6060              STR      r0,[r4,#4]
;;;85     		    (t->extraObjectType << EXTRA_OBJECT_TYPE_SHIFT);
;;;86     
;;;87     		if (t->extraObjectType == YAFFS_OBJECT_TYPE_HARDLINK) {
00006a  f8950038          LDRB     r0,[r5,#0x38]
00006e  2804              CMP      r0,#4
000070  d102              BNE      |L1.120|
;;;88     			ptt->byteCount = t->extraEquivalentObjectId;
000072  6c28              LDR      r0,[r5,#0x40]
000074  60e0              STR      r0,[r4,#0xc]
                  |L1.118|
000076  e008              B        |L1.138|
                  |L1.120|
;;;89     		} else if (t->extraObjectType == YAFFS_OBJECT_TYPE_FILE) {
000078  f8950038          LDRB     r0,[r5,#0x38]
00007c  2801              CMP      r0,#1
00007e  d102              BNE      |L1.134|
;;;90     			ptt->byteCount = t->extraFileLength;
000080  6be8              LDR      r0,[r5,#0x3c]
000082  60e0              STR      r0,[r4,#0xc]
000084  e001              B        |L1.138|
                  |L1.134|
;;;91     		} else {
;;;92     			ptt->byteCount = 0;
000086  2000              MOVS     r0,#0
000088  60e0              STR      r0,[r4,#0xc]
                  |L1.138|
;;;93     		}
;;;94     	}
;;;95     
;;;96     	yaffs_DumpPackedTags2TagsPart(ptt);
00008a  4620              MOV      r0,r4
00008c  f7fffffe          BL       yaffs_DumpPackedTags2TagsPart
;;;97     	yaffs_DumpTags2(t);
000090  4628              MOV      r0,r5
000092  f7fffffe          BL       yaffs_DumpTags2
;;;98     }
000096  bd70              POP      {r4-r6,pc}
;;;99     
                          ENDP

                  yaffs_PackTags2 PROC
;;;100    
;;;101    void yaffs_PackTags2(yaffs_PackedTags2 * pt, const yaffs_ExtendedTags * t)
000098  b570              PUSH     {r4-r6,lr}
;;;102    {
00009a  4604              MOV      r4,r0
00009c  460d              MOV      r5,r1
;;;103    	yaffs_PackTags2TagsPart(&pt->t,t);
00009e  4629              MOV      r1,r5
0000a0  4620              MOV      r0,r4
0000a2  f7fffffe          BL       yaffs_PackTags2TagsPart
;;;104    
;;;105    #ifndef YAFFS_IGNORE_TAGS_ECC
;;;106    	{
;;;107    		yaffs_ECCCalculateOther((unsigned char *)&pt->t,
0000a6  f1040210          ADD      r2,r4,#0x10
0000aa  2110              MOVS     r1,#0x10
0000ac  4620              MOV      r0,r4
0000ae  f7fffffe          BL       yaffs_ECCCalculateOther
;;;108    					sizeof(yaffs_PackedTags2TagsPart),
;;;109    					&pt->ecc);
;;;110    	}
;;;111    #endif
;;;112    }
0000b2  bd70              POP      {r4-r6,pc}
;;;113    
                          ENDP

                  yaffs_UnpackTags2TagsPart PROC
;;;114    
;;;115    void yaffs_UnpackTags2TagsPart(yaffs_ExtendedTags * t, yaffs_PackedTags2TagsPart * ptt)
0000b4  b570              PUSH     {r4-r6,lr}
;;;116    {
0000b6  4604              MOV      r4,r0
0000b8  460d              MOV      r5,r1
;;;117    
;;;118    	memset(t, 0, sizeof(yaffs_ExtendedTags));
0000ba  2148              MOVS     r1,#0x48
0000bc  4620              MOV      r0,r4
0000be  f7fffffe          BL       __aeabi_memclr4
;;;119    
;;;120    	yaffs_InitialiseTags(t);
0000c2  4620              MOV      r0,r4
0000c4  f7fffffe          BL       yaffs_InitialiseTags
;;;121    
;;;122    	if (ptt->sequenceNumber != 0xFFFFFFFF) {
0000c8  6828              LDR      r0,[r5,#0]
0000ca  1c40              ADDS     r0,r0,#1
0000cc  2800              CMP      r0,#0
0000ce  d034              BEQ      |L1.314|
;;;123    		t->blockBad = 0;
0000d0  2000              MOVS     r0,#0
0000d2  61a0              STR      r0,[r4,#0x18]
;;;124    		t->chunkUsed = 1;
0000d4  2001              MOVS     r0,#1
0000d6  6060              STR      r0,[r4,#4]
;;;125    		t->objectId = ptt->objectId;
0000d8  6868              LDR      r0,[r5,#4]
0000da  60a0              STR      r0,[r4,#8]
;;;126    		t->chunkId = ptt->chunkId;
0000dc  68a8              LDR      r0,[r5,#8]
0000de  60e0              STR      r0,[r4,#0xc]
;;;127    		t->byteCount = ptt->byteCount;
0000e0  68e8              LDR      r0,[r5,#0xc]
0000e2  6120              STR      r0,[r4,#0x10]
;;;128    		t->chunkDeleted = 0;
0000e4  2000              MOVS     r0,#0
0000e6  61e0              STR      r0,[r4,#0x1c]
;;;129    		t->serialNumber = 0;
0000e8  6220              STR      r0,[r4,#0x20]
;;;130    		t->sequenceNumber = ptt->sequenceNumber;
0000ea  6828              LDR      r0,[r5,#0]
0000ec  6260              STR      r0,[r4,#0x24]
;;;131    
;;;132    		/* Do extra header info stuff */
;;;133    
;;;134    		if (ptt->chunkId & EXTRA_HEADER_INFO_FLAG) {
0000ee  68a8              LDR      r0,[r5,#8]
0000f0  f0004000          AND      r0,r0,#0x80000000
0000f4  b308              CBZ      r0,|L1.314|
;;;135    			t->chunkId = 0;
0000f6  2000              MOVS     r0,#0
0000f8  60e0              STR      r0,[r4,#0xc]
;;;136    			t->byteCount = 0;
0000fa  6120              STR      r0,[r4,#0x10]
;;;137    
;;;138    			t->extraHeaderInfoAvailable = 1;
0000fc  2001              MOVS     r0,#1
0000fe  62a0              STR      r0,[r4,#0x28]
;;;139    			t->extraParentObjectId =
000100  68a8              LDR      r0,[r5,#8]
000102  f0204070          BIC      r0,r0,#0xf0000000
000106  62e0              STR      r0,[r4,#0x2c]
;;;140    			    ptt->chunkId & (~(ALL_EXTRA_FLAGS));
;;;141    			t->extraIsShrinkHeader =
000108  68a8              LDR      r0,[r5,#8]
00010a  f3c07080          UBFX     r0,r0,#30,#1
00010e  6320              STR      r0,[r4,#0x30]
;;;142    			    (ptt->chunkId & EXTRA_SHRINK_FLAG) ? 1 : 0;
;;;143    			t->extraShadows =
000110  68a8              LDR      r0,[r5,#8]
000112  f3c07040          UBFX     r0,r0,#29,#1
000116  6360              STR      r0,[r4,#0x34]
;;;144    			    (ptt->chunkId & EXTRA_SHADOWS_FLAG) ? 1 : 0;
;;;145    			t->extraObjectType =
000118  6868              LDR      r0,[r5,#4]
00011a  0f00              LSRS     r0,r0,#28
00011c  f8840038          STRB     r0,[r4,#0x38]
;;;146    			    ptt->objectId >> EXTRA_OBJECT_TYPE_SHIFT;
;;;147    			t->objectId &= ~EXTRA_OBJECT_TYPE_MASK;
000120  68a0              LDR      r0,[r4,#8]
000122  f0204070          BIC      r0,r0,#0xf0000000
000126  60a0              STR      r0,[r4,#8]
;;;148    
;;;149    			if (t->extraObjectType == YAFFS_OBJECT_TYPE_HARDLINK) {
000128  f8940038          LDRB     r0,[r4,#0x38]
00012c  2804              CMP      r0,#4
00012e  d102              BNE      |L1.310|
;;;150    				t->extraEquivalentObjectId = ptt->byteCount;
000130  68e8              LDR      r0,[r5,#0xc]
000132  6420              STR      r0,[r4,#0x40]
000134  e001              B        |L1.314|
                  |L1.310|
;;;151    			} else {
;;;152    				t->extraFileLength = ptt->byteCount;
000136  68e8              LDR      r0,[r5,#0xc]
000138  63e0              STR      r0,[r4,#0x3c]
                  |L1.314|
;;;153    			}
;;;154    		}
;;;155    	}
;;;156    
;;;157    	yaffs_DumpPackedTags2TagsPart(ptt);
00013a  4628              MOV      r0,r5
00013c  f7fffffe          BL       yaffs_DumpPackedTags2TagsPart
;;;158    	yaffs_DumpTags2(t);
000140  4620              MOV      r0,r4
000142  f7fffffe          BL       yaffs_DumpTags2
;;;159    
;;;160    }
000146  bd70              POP      {r4-r6,pc}
;;;161    
                          ENDP

                  yaffs_UnpackTags2 PROC
;;;162    
;;;163    void yaffs_UnpackTags2(yaffs_ExtendedTags * t, yaffs_PackedTags2 * pt)
000148  b5fe              PUSH     {r1-r7,lr}
;;;164    {
00014a  4605              MOV      r5,r0
00014c  460c              MOV      r4,r1
;;;165    
;;;166    	yaffs_ECCResult eccResult = YAFFS_ECC_RESULT_NO_ERROR;
00014e  2601              MOVS     r6,#1
;;;167    	
;;;168    	if (pt->t.sequenceNumber != 0xFFFFFFFF) {
000150  6820              LDR      r0,[r4,#0]
000152  1c40              ADDS     r0,r0,#1
000154  b1e8              CBZ      r0,|L1.402|
;;;169    		/* Page is in use */
;;;170    #ifndef YAFFS_IGNORE_TAGS_ECC
;;;171    		{
;;;172    			yaffs_ECCOther ecc;
;;;173    			int result;
;;;174    			yaffs_ECCCalculateOther((unsigned char *)&pt->t,
000156  466a              MOV      r2,sp
000158  2110              MOVS     r1,#0x10
00015a  4620              MOV      r0,r4
00015c  f7fffffe          BL       yaffs_ECCCalculateOther
;;;175    						sizeof
;;;176    						(yaffs_PackedTags2TagsPart),
;;;177    						&ecc);
;;;178    			result =
000160  466b              MOV      r3,sp
000162  f1040210          ADD      r2,r4,#0x10
000166  2110              MOVS     r1,#0x10
000168  4620              MOV      r0,r4
00016a  f7fffffe          BL       yaffs_ECCCorrectOther
00016e  4607              MOV      r7,r0
;;;179    			    yaffs_ECCCorrectOther((unsigned char *)&pt->t,
;;;180    						  sizeof
;;;181    						  (yaffs_PackedTags2TagsPart),
;;;182    						  &pt->ecc, &ecc);
;;;183    			switch(result){
000170  f1b73fff          CMP      r7,#0xffffffff
000174  d007              BEQ      |L1.390|
000176  b117              CBZ      r7,|L1.382|
000178  2f01              CMP      r7,#1
00017a  d106              BNE      |L1.394|
00017c  e001              B        |L1.386|
                  |L1.382|
;;;184    				case 0:
;;;185    					eccResult = YAFFS_ECC_RESULT_NO_ERROR;
00017e  2601              MOVS     r6,#1
;;;186    					break;
000180  e005              B        |L1.398|
                  |L1.386|
;;;187    				case 1:
;;;188    					eccResult = YAFFS_ECC_RESULT_FIXED;
000182  2602              MOVS     r6,#2
;;;189    					break;
000184  e003              B        |L1.398|
                  |L1.390|
;;;190    				case -1:
;;;191    					eccResult = YAFFS_ECC_RESULT_UNFIXED;
000186  2603              MOVS     r6,#3
;;;192    					break;
000188  e001              B        |L1.398|
                  |L1.394|
;;;193    				default:
;;;194    					eccResult = YAFFS_ECC_RESULT_UNKNOWN;
00018a  2600              MOVS     r6,#0
00018c  bf00              NOP                            ;183
                  |L1.398|
00018e  bf00              NOP                            ;186
;;;195    			}
;;;196    		}
000190  bf00              NOP      
                  |L1.402|
;;;197    #endif
;;;198    	}
;;;199    
;;;200    	yaffs_UnpackTags2TagsPart(t,&pt->t);
000192  4621              MOV      r1,r4
000194  4628              MOV      r0,r5
000196  f7fffffe          BL       yaffs_UnpackTags2TagsPart
;;;201    	
;;;202    	t->eccResult = eccResult;
00019a  752e              STRB     r6,[r5,#0x14]
;;;203    
;;;204    	yaffs_DumpPackedTags2(pt);
00019c  4620              MOV      r0,r4
00019e  f7fffffe          BL       yaffs_DumpPackedTags2
;;;205    	yaffs_DumpTags2(t);
0001a2  4628              MOV      r0,r5
0001a4  f7fffffe          BL       yaffs_DumpTags2
;;;206    
;;;207    }
0001a8  bdfe              POP      {r1-r7,pc}
;;;208    
                          ENDP


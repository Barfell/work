; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\yaffscfg2k.o --asm_dir=.\ --list_dir=.\ --depend=.\flash\yaffscfg2k.d --feedback=.\Flash\YL_LPC1788_Test.fed --cpu=Cortex-M3 --apcs=interwork -O0 -I..\app -I..\CM3_lib -I..\Drivers -I..\Startup -I.\Easy_web -I.\Lcd_Drv -I.\IIC_Test -I.\USU_Host -I.\Nand_Test -I.\FATFS_R0.08 -I..\fs -I"D:\Program Files\mdk\ARM\RV31\INC" -I"D:\Program Files\mdk\pack\ARM\CMSIS\4.1.1\CMSIS\Include" -I"D:\Program Files\mdk\ARM\Inc\NXP\LPC177x_8x" -D__MICROLIB --omf_browse=.\flash\yaffscfg2k.crf ..\fs\yaffscfg2k.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  yaffsfs_SetError PROC
;;;41     static int yaffsfs_lastError;
;;;42     void yaffsfs_SetError(int err)
000000  4921              LDR      r1,|L1.136|
;;;43     {
;;;44     	yaffsfs_lastError = err;
000002  6008              STR      r0,[r1,#0]  ; yaffsfs_lastError
;;;45     }
000004  4770              BX       lr
;;;46     int yaffsfs_GetLastError(void)
                          ENDP

                  yaffsfs_Lock PROC
;;;50     
;;;51     void yaffsfs_Lock(void)
000006  4770              BX       lr
;;;52     {
;;;53     }
;;;54     void yaffsfs_Unlock(void)
                          ENDP

                  yaffsfs_Unlock PROC
000008  4770              BX       lr
;;;55     {
;;;56     }
;;;57     
                          ENDP

                  yaffsfs_CurrentTime PROC
;;;58     __u32 yaffsfs_CurrentTime(void)
00000a  2000              MOVS     r0,#0
;;;59     {
;;;60     	return 0;
;;;61     }
00000c  4770              BX       lr
;;;62     
                          ENDP

                  yaffs_malloc PROC
;;;67     
;;;68     void *yaffs_malloc(size_t size)
00000e  b570              PUSH     {r4-r6,lr}
;;;69     {
000010  4604              MOV      r4,r0
;;;70     	void * this;
;;;71     
;;;72     	this = malloc(size);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       malloc
000018  4605              MOV      r5,r0
;;;73     	return this;
00001a  4628              MOV      r0,r5
;;;74     }
00001c  bd70              POP      {r4-r6,pc}
;;;75     
                          ENDP

                  yaffs_StartUp PROC
;;;94     
;;;95     int yaffs_StartUp(void)
00001e  b510              PUSH     {r4,lr}
;;;96     {   
;;;97     	memset(&flashDev,0,sizeof(flashDev));
000020  f6406118          MOV      r1,#0xe18
000024  4819              LDR      r0,|L1.140|
000026  f7fffffe          BL       __aeabi_memclr4
;;;98     
;;;99         flashDev.name="yaffs2";
00002a  a019              ADR      r0,|L1.144|
00002c  4917              LDR      r1,|L1.140|
00002e  6088              STR      r0,[r1,#8]  ; flashDev
;;;100    	flashDev.totalBytesPerChunk = 2048;//名字误导人 实际上用2048
000030  f44f6000          MOV      r0,#0x800
000034  f8c10090          STR      r0,[r1,#0x90]  ; flashDev
;;;101        flashDev.nDataBytesPerChunk =2048;
000038  60c8              STR      r0,[r1,#0xc]  ; flashDev
;;;102        flashDev.spareBytesPerChunk = 64;
00003a  2040              MOVS     r0,#0x40
00003c  6148              STR      r0,[r1,#0x14]  ; flashDev
;;;103    	flashDev.nChunksPerBlock = 64;
00003e  6108              STR      r0,[r1,#0x10]  ; flashDev
;;;104    	flashDev.nReservedBlocks = 5;
000040  2005              MOVS     r0,#5
000042  6208              STR      r0,[r1,#0x20]  ; flashDev
;;;105    	flashDev.inbandTags = 0;
000044  2000              MOVS     r0,#0
000046  f8c1008c          STR      r0,[r1,#0x8c]  ; flashDev
;;;106        //flashDev.useNANDECC = 0; //加上他反倒出问题了
;;;107    	flashDev.startBlock = 0;
00004a  6188              STR      r0,[r1,#0x18]  ; flashDev
;;;108    	flashDev.endBlock = yflash2_GetNumberOfBlocks()-1;
00004c  f7fffffe          BL       yflash2_GetNumberOfBlocks
000050  1e40              SUBS     r0,r0,#1
000052  490e              LDR      r1,|L1.140|
000054  61c8              STR      r0,[r1,#0x1c]  ; flashDev
;;;109    	flashDev.isYaffs2 = 1;
000056  2001              MOVS     r0,#1
000058  65c8              STR      r0,[r1,#0x5c]  ; flashDev
;;;110    	flashDev.wideTnodesDisabled=0;
00005a  2000              MOVS     r0,#0
00005c  6688              STR      r0,[r1,#0x68]  ; flashDev
;;;111    	flashDev.nShortOpCaches = 10; // Use caches
00005e  200a              MOVS     r0,#0xa
000060  6248              STR      r0,[r1,#0x24]  ; flashDev
;;;112    	flashDev.genericDevice = (void *) 2;	// Used to identify the device in fstat.
000062  2002              MOVS     r0,#2
000064  6308              STR      r0,[r1,#0x30]  ; flashDev
;;;113    	flashDev.writeChunkWithTagsToNAND = yflash2_WriteChunkWithTagsToNAND;
000066  480c              LDR      r0,|L1.152|
000068  64c8              STR      r0,[r1,#0x4c]  ; flashDev
;;;114    	flashDev.readChunkWithTagsFromNAND = yflash2_ReadChunkWithTagsFromNAND;
00006a  480c              LDR      r0,|L1.156|
00006c  6508              STR      r0,[r1,#0x50]  ; flashDev
;;;115    	flashDev.eraseBlockInNAND = yflash2_EraseBlockInNAND;
00006e  480c              LDR      r0,|L1.160|
000070  6408              STR      r0,[r1,#0x40]  ; flashDev
;;;116    	flashDev.initialiseNAND = yflash2_InitialiseNAND;
000072  480c              LDR      r0,|L1.164|
000074  6448              STR      r0,[r1,#0x44]  ; flashDev
;;;117    	flashDev.markNANDBlockBad = yflash2_MarkNANDBlockBad;
000076  480c              LDR      r0,|L1.168|
000078  6548              STR      r0,[r1,#0x54]  ; flashDev
;;;118    	flashDev.queryNANDBlock = yflash2_QueryNANDBlock;
00007a  480c              LDR      r0,|L1.172|
00007c  6588              STR      r0,[r1,#0x58]  ; flashDev
;;;119    
;;;120    	yaffs_initialise(yaffsfs_config);
00007e  480c              LDR      r0,|L1.176|
000080  f7fffffe          BL       yaffs_initialise
;;;121    	
;;;122    	return 0;
000084  2000              MOVS     r0,#0
;;;123    }
000086  bd10              POP      {r4,pc}
;;;124    
                          ENDP

                  |L1.136|
                          DCD      yaffsfs_lastError
                  |L1.140|
                          DCD      flashDev
                  |L1.144|
000090  79616666          DCB      "yaffs2",0
000094  733200  
000097  00                DCB      0
                  |L1.152|
                          DCD      yflash2_WriteChunkWithTagsToNAND
                  |L1.156|
                          DCD      yflash2_ReadChunkWithTagsFromNAND
                  |L1.160|
                          DCD      yflash2_EraseBlockInNAND
                  |L1.164|
                          DCD      yflash2_InitialiseNAND
                  |L1.168|
                          DCD      yflash2_MarkNANDBlockBad
                  |L1.172|
                          DCD      yflash2_QueryNANDBlock
                  |L1.176|
                          DCD      yaffsfs_config

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  yaffsfs_GetLastError PROC
;;;126    
;;;127    void SetCheckpointReservedBlocks(int n)
000000  4801              LDR      r0,|L2.8|
;;;128    {
;;;129    //	flashDev.nCheckpointReservedBlocks = n;
;;;130    }
000002  6800              LDR      r0,[r0,#0]  ; yaffsfs_lastError
000004  4770              BX       lr
;;;131    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      yaffsfs_lastError

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.3||, ||.text||
                  yaffs_free PROC
;;;126    
;;;127    void SetCheckpointReservedBlocks(int n)
000000  b510              PUSH     {r4,lr}
;;;128    {
;;;129    //	flashDev.nCheckpointReservedBlocks = n;
;;;130    }
000002  4604              MOV      r4,r0
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       free
00000a  bd10              POP      {r4,pc}
;;;131    
                          ENDP


                          AREA ||area_number.4||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.4||, ||.text||
                  yaffsfs_LocalInitialisation PROC
;;;126    
;;;127    void SetCheckpointReservedBlocks(int n)
000000  4770              BX       lr
;;;128    {
;;;129    //	flashDev.nCheckpointReservedBlocks = n;
;;;130    }
;;;131    
                          ENDP


                          AREA ||area_number.5||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.5||, ||.text||
                  SetCheckpointReservedBlocks PROC
;;;126    
;;;127    void SetCheckpointReservedBlocks(int n)
000000  4770              BX       lr
;;;128    {
;;;129    //	flashDev.nCheckpointReservedBlocks = n;
;;;130    }
;;;131    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  flashDev
                          %        3608

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  2f2f00            DCB      "//",0

                          AREA ||.data||, DATA, ALIGN=2

                  yaffs_traceMask
                          DCD      0x4001017c
                  yaffsfs_lastError
                          DCD      0x00000000
                  yaffs_kill_alloc
                          DCD      0x00000000
                  total_malloced
                          DCD      0x00000000
                  malloc_limit
                          DCD      0x005b8d80
                  yaffsfs_config
                          DCD      ||.conststring||
                          DCD      flashDev
                          DCD      0x00000000
                          DCD      0x00000000
